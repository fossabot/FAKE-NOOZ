{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Loading/Loading.module.scss","components/Footer/Footer.module.scss","serviceWorker.js","components/Loading/Loading.js","pages/index.js","components/Navbar/Navbar.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["module","exports","root","link","icon","refreshBtn","alertContent","spacer","unregister","Boolean","window","location","hostname","match","_ref4","Object","asyncToGenerator","regenerator_default","a","mark","_callee4","wrap","_context4","prev","next","navigator","serviceWorker","ready","sent","stop","apply","this","arguments","Loading","_ref","isLoading","pastDelay","error","react_default","createElement","Container","className","Row","Col","md","size","offset","index_es","faSpinnerThird","spin","Alert","variant","Media","faExclamationTriangle","fixedWidth","Body","styles","Fragment","type","concat","onClick","reload","defaultProps","undefined","Home","Loadable","loader","__webpack_require__","e","then","bind","loading","NotFound","linkClass","classNames","iconClass","CustomNavbar","Navbar","collapseOnSelect","bg","expand","Brand","as","Link","to","Toggle","label","aria-controls","Collapse","id","Nav","faUser","Footer","Jumbotron","fluid","Date","getFullYear","App","BrowserRouter","Helmet","defaultTitle","Navbar_Navbar","Switch","Route","exact","path","component","components_Footer_Footer","rootElement","document","getElementById","preloadReady","hasChildNodes","hydrate","components_App_App","render"],"mappings":"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","file":"static/js/main.3414612f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Navbar_root__aOLRU\",\"link\":\"Navbar_link__jb8gB\",\"icon\":\"Navbar_icon__1Y2yC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"refreshBtn\":\"Loading_refreshBtn__1D28J\",\"alertContent\":\"Loading_alertContent__Cvqxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spacer\":\"Footer_spacer__rKt5s\"};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nconst registerValidSW = async (swUrl, config) => {\n    try {\n        const registration = await navigator.serviceWorker.register(swUrl);\n        registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n                if (installingWorker.state === 'installed')\n                    if (navigator.serviceWorker.controller) {\n                        // At this point, the old content will have been purged and\n                        // the fresh content will have been added to the cache.\n                        // It's the perfect time to display a \"Update is available.\n                        // Please refresh.\" message in your web app.\n                        console.warn('Update is available. Please refresh.');\n                        // Execute callback\n                        if (config.onUpdate) config.onUpdate(registration);\n                    } else {\n                        // At this point, everything has been precached.\n                        // It's the perfect time to display a\n                        // \"App is cached for offline use.\" message.\n                        console.info('App is cached for offline use.');\n                        // Execute callback\n                        if (config.onSuccess) config.onSuccess(registration);\n                    }\n            };\n        };\n    } catch (error) {\n        console.error('Error during service worker registration:', error);\n    }\n};\n\nconst checkValidServiceWorker = async (swUrl, config) => {\n    try {\n        // Check if the service worker can be found. If it can't reload the page.\n        const response = fetch(swUrl);\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n            // No service worker found. Probably a different app. Reload the page.\n            const registration = await navigator.serviceWorker.ready;\n            await registration.unregister();\n            window.location.reload();\n            // Service worker found. Proceed as normal.\n        } else await registerValidSW(swUrl, config);\n    } catch {\n        console.info(\n            'No internet connection found. App is running in offline mode.'\n        );\n    }\n};\n\nexport const register = config => {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        if (publicUrl.origin !== window.location.origin) return;\n        window.addEventListener('load', async () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                await checkValidServiceWorker(swUrl, config);\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                await navigator.serviceWorker.ready;\n                console.info(\n                    'This app is being served cache-first by a service worker. To learn more, visit ' +\n                        'https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app'\n                );\n            }\n            // Is not localhost. Just register service worker.\n            else registerValidSW(swUrl, config);\n        });\n    }\n};\n\nexport const unregister = async () => {\n    if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.ready;\n        registration.unregister();\n    }\n};\n","import React from 'react';\nimport { bool, shape, string } from 'prop-types';\nimport { Container, Row, Col, Alert, Media } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinnerThird } from '@fortawesome/pro-light-svg-icons';\nimport { faExclamationTriangle } from '@fortawesome/pro-solid-svg-icons';\nimport styles from './Loading.module.scss';\n\nconst Loading = ({ isLoading, pastDelay, error }) =>\n    (isLoading && pastDelay) || error ? (\n        <Container className=\"py-5 text-center text-primary\">\n            <Row className=\"py-5\">\n                <Col md={{ size: 6, offset: 3 }} className=\"py-md-5\">\n                    {isLoading && pastDelay && (\n                        <FontAwesomeIcon\n                            icon={faSpinnerThird}\n                            size=\"3x\"\n                            spin\n                            className=\"my-5\"\n                        />\n                    )}\n                    {error && (\n                        <Alert variant=\"danger\" className=\"m-0 text-left\">\n                            <Media>\n                                <Media className=\"mr-3\">\n                                    <FontAwesomeIcon\n                                        icon={faExclamationTriangle}\n                                        fixedWidth\n                                    />\n                                </Media>\n                                <Media.Body className={styles.alertContent}>\n                                    {process.env.NODE_ENV === 'development' ? (\n                                        <>\n                                            <b>Page Load Error</b>\n                                            <pre className=\"m-0\">\n                                                {error.message}\n                                                <br />\n                                                {error.stack}\n                                            </pre>\n                                        </>\n                                    ) : (\n                                        <>\n                                            Sorry, there was a problem loading\n                                            this page. Please{' '}\n                                            <button\n                                                type=\"button\"\n                                                className={`${\n                                                    styles.refreshBtn\n                                                } alert-link p-0 bg-transparent border-0`}\n                                                onClick={() =>\n                                                    window.location.reload()\n                                                }\n                                            >\n                                                refresh\n                                            </button>\n                                            .\n                                        </>\n                                    )}\n                                </Media.Body>\n                            </Media>\n                        </Alert>\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    ) : null;\n\nLoading.propTypes = {\n    isLoading: bool.isRequired,\n    pastDelay: bool,\n    error: shape({\n        message: string\n    })\n};\n\nLoading.defaultProps = {\n    pastDelay: false,\n    error: undefined\n};\n\nexport default Loading;\n","import Loadable from 'react-loadable';\nimport loading from '../components/Loading';\n\nexport const Home = Loadable({\n    loader: () => import('./Home'),\n    loading\n});\n\nexport const NotFound = Loadable({\n    loader: () => import('./NotFound'),\n    loading\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink as Link } from 'react-router-dom';\nimport { Container, Navbar, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/pro-solid-svg-icons';\nimport styles from './Navbar.module.scss';\n\nconst linkClass = classNames(\n    styles.link,\n    'd-flex',\n    'd-lg-block',\n    'align-items-center'\n);\nconst iconClass = classNames(\n    styles.icon,\n    'mr-2',\n    'mx-lg-auto',\n    'mb-lg-1',\n    'd-lg-block'\n);\n\nconst CustomNavbar = () => (\n    <Navbar\n        collapseOnSelect\n        bg=\"white\"\n        variant=\"light\"\n        expand=\"lg\"\n        className={styles.root}\n    >\n        <Container>\n            <Navbar.Brand\n                as={Link}\n                to=\"/\"\n                className={classNames('d-flex', 'align-items-center')}\n            >\n                <h4\n                    className={classNames(\n                        'd-inline',\n                        'm-0',\n                        'ml-2',\n                        'text-primary'\n                    )}\n                >\n                    My App\n                </h4>\n            </Navbar.Brand>\n            <Navbar.Toggle label=\"Toggle Navbar\" aria-controls=\"navbar-nav\" />\n            <Navbar.Collapse id=\"navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    <Nav.Link as={Link} to=\"/user\" className={linkClass}>\n                        <FontAwesomeIcon\n                            icon={faUser}\n                            fixedWidth\n                            className={iconClass}\n                        />\n                        User\n                    </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Container>\n    </Navbar>\n);\n\nexport default CustomNavbar;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Jumbotron, Container } from 'react-bootstrap';\nimport styles from './Footer.module.scss';\n\nconst Footer = () => (\n    <Jumbotron\n        fluid\n        className={classNames('mb-0', 'bg-light', 'text-center', 'text-muted')}\n    >\n        <Container>\n            &copy; {new Date().getFullYear()} Grant Burry & Vamshi Arugonda\n            <span className={classNames(styles.spacer, 'mx-2')}>&middot;</span>\n            {process.env.NODE_ENV === 'development' ? (\n                <span className=\"text-danger\">Development Mode</span>\n            ) : (\n                'All rights reserved'\n            )}\n        </Container>\n    </Jumbotron>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Home, NotFound } from '../../pages';\nimport Navbar from '../Navbar';\nimport Footer from '../Footer';\nimport './App.scss';\n\nconst App = () => (\n    <BrowserRouter>\n        <>\n            <Helmet defaultTitle=\"My App\" />\n            <Navbar />\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route component={NotFound} />\n            </Switch>\n            <Footer />\n        </>\n    </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport Loadable from 'react-loadable';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\n\nconst rootElement = document.getElementById('root');\n\nLoadable.preloadReady().then(() =>\n    rootElement.hasChildNodes()\n        ? hydrate(<App />, rootElement)\n        : render(<App />, rootElement)\n);\n\n// Service Worker\n// https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app\nserviceWorker.unregister();\n"],"sourceRoot":""}