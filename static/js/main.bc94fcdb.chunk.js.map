{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Loading/Loading.module.scss","components/Footer/Footer.module.scss","serviceWorker.js","components/Loading/Loading.js","pages/index.js","components/Navbar/Navbar.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["module","exports","root","link","gameInfo","icon","refreshBtn","alertContent","spacer","unregister","Boolean","window","location","hostname","match","_ref4","Object","asyncToGenerator","regenerator_default","a","mark","_callee4","wrap","_context4","prev","next","navigator","serviceWorker","ready","sent","stop","apply","this","arguments","Loading","_ref","isLoading","pastDelay","error","react_default","createElement","Container","className","classNames","Row","Col","md","span","offset","react_fontawesome_index_es","faSpinnerThird","size","spin","Alert","variant","Media","faExclamationTriangle","fixedWidth","Body","styles","Fragment","type","onClick","reload","defaultProps","undefined","Home","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","NotFound","linkClass","iconClass","CustomNavbar","round","score","handleNewGame","setScore","setRound","Navbar","collapseOnSelect","expand","Brand","as","Link","to","Nav","faPowerOff","faQuestionCircle","Footer","Jumbotron","fluid","Date","getFullYear","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","setHandleNewGame","_useState7","_useState8","handlePlay","setHandlePlay","keyHandlers","r","f","index_es","handlers","focused","tabIndex","BrowserRouter","Helmet","defaultTitle","Navbar_Navbar","Switch","Route","exact","path","render","props","assign","playHandler","newGameHandler","component","components_Footer_Footer","rootElement","document","getElementById","preloadReady","hasChildNodes","hydrate","components_App_App"],"mappings":"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","file":"static/js/main.bc94fcdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Navbar_root__aOLRU\",\"link\":\"Navbar_link__jb8gB\",\"gameInfo\":\"Navbar_gameInfo__3wHke\",\"icon\":\"Navbar_icon__1Y2yC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"refreshBtn\":\"Loading_refreshBtn__1D28J\",\"alertContent\":\"Loading_alertContent__Cvqxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spacer\":\"Footer_spacer__rKt5s\"};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nconst registerValidSW = async (swUrl, config) => {\n    try {\n        const registration = await navigator.serviceWorker.register(swUrl);\n        registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n                if (installingWorker.state === 'installed')\n                    if (navigator.serviceWorker.controller) {\n                        // At this point, the old content will have been purged and\n                        // the fresh content will have been added to the cache.\n                        // It's the perfect time to display a \"Update is available.\n                        // Please refresh.\" message in your web app.\n                        console.warn('Update is available. Please refresh.');\n                        // Execute callback\n                        if (config.onUpdate) config.onUpdate(registration);\n                    } else {\n                        // At this point, everything has been precached.\n                        // It's the perfect time to display a\n                        // \"App is cached for offline use.\" message.\n                        console.info('App is cached for offline use.');\n                        // Execute callback\n                        if (config.onSuccess) config.onSuccess(registration);\n                    }\n            };\n        };\n    } catch (error) {\n        console.error('Error during service worker registration:', error);\n    }\n};\n\nconst checkValidServiceWorker = async (swUrl, config) => {\n    try {\n        // Check if the service worker can be found. If it can't reload the page.\n        const response = fetch(swUrl);\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n            // No service worker found. Probably a different app. Reload the page.\n            const registration = await navigator.serviceWorker.ready;\n            await registration.unregister();\n            window.location.reload();\n            // Service worker found. Proceed as normal.\n        } else await registerValidSW(swUrl, config);\n    } catch {\n        console.info(\n            'No internet connection found. App is running in offline mode.'\n        );\n    }\n};\n\nexport const register = config => {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        if (publicUrl.origin !== window.location.origin) return;\n        window.addEventListener('load', async () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                await checkValidServiceWorker(swUrl, config);\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                await navigator.serviceWorker.ready;\n                console.info(\n                    'This app is being served cache-first by a service worker. To learn more, visit ' +\n                        'https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app'\n                );\n            }\n            // Is not localhost. Just register service worker.\n            else registerValidSW(swUrl, config);\n        });\n    }\n};\n\nexport const unregister = async () => {\n    if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.ready;\n        registration.unregister();\n    }\n};\n","import React from 'react';\nimport { bool, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { Container, Row, Col, Alert, Media } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinnerThird } from '@fortawesome/pro-light-svg-icons';\nimport { faExclamationTriangle } from '@fortawesome/pro-solid-svg-icons';\nimport styles from './Loading.module.scss';\n\nconst Loading = ({ isLoading, pastDelay, error }) =>\n    (isLoading && pastDelay) || error ? (\n        <Container className={classNames('py-5', 'text-primary')}>\n            <Row className=\"py-5\">\n                <Col md={{ span: 6, offset: 3 }} className=\"py-md-t\">\n                    <div className=\"text-center\">\n                        {isLoading && pastDelay && (\n                            <FontAwesomeIcon\n                                icon={faSpinnerThird}\n                                size=\"3x\"\n                                spin\n                            />\n                        )}\n                    </div>\n                    {error && (\n                        <Alert variant=\"danger\" className=\"m-0\">\n                            <Media>\n                                <Media className=\"mr-3\">\n                                    <FontAwesomeIcon\n                                        icon={faExclamationTriangle}\n                                        fixedWidth\n                                    />\n                                </Media>\n                                <Media.Body className={styles.alertContent}>\n                                    {process.env.NODE_ENV === 'development' ? (\n                                        <>\n                                            <b>Page Load Error</b>\n                                            <pre className=\"m-0\">\n                                                {error.message}\n                                                <br />\n                                                {error.stack}\n                                            </pre>\n                                        </>\n                                    ) : (\n                                        <>\n                                            Sorry, there was a problem loading\n                                            this page. Please{' '}\n                                            <button\n                                                type=\"button\"\n                                                className={classNames(\n                                                    styles.refreshBtn,\n                                                    'alert-link',\n                                                    'p-0',\n                                                    'bg-transparent',\n                                                    'border-0'\n                                                )}\n                                                onClick={() =>\n                                                    window.location.reload()\n                                                }\n                                            >\n                                                refresh\n                                            </button>\n                                            .\n                                        </>\n                                    )}\n                                </Media.Body>\n                            </Media>\n                        </Alert>\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    ) : null;\n\nLoading.propTypes = {\n    isLoading: bool.isRequired,\n    pastDelay: bool,\n    error: shape({\n        message: string\n    })\n};\n\nLoading.defaultProps = {\n    pastDelay: false,\n    error: undefined\n};\n\nexport default Loading;\n","import Loadable from 'react-loadable';\nimport loading from '../components/Loading';\n\nexport const Home = Loadable({\n    loader: () => import('./Home'),\n    loading\n});\n\nexport const NotFound = Loadable({\n    loader: () => import('./NotFound'),\n    loading\n});\n","import React from 'react';\nimport { number, func } from 'prop-types';\nimport classNames from 'classnames';\nimport { NavLink as Link } from 'react-router-dom';\nimport { Container, Navbar, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPowerOff, faQuestionCircle } from '@fortawesome/pro-solid-svg-icons';\nimport styles from './Navbar.module.scss';\n\nconst linkClass = classNames(\n    styles.link,\n    'd-flex',\n    'd-lg-block',\n    'align-items-center'\n);\nconst iconClass = classNames(\n    styles.icon,\n    'mr-2',\n    'mx-lg-auto',\n    'mb-lg-1',\n    'd-lg-block'\n);\n\nconst CustomNavbar = ({ round, score, setScore, setRound, handleNewGame }) => (\n    <Navbar collapseOnSelect variant=\"dark\" expand=\"lg\" className={styles.root}>\n        <Container\n            className={classNames(\n                'd-flex',\n                'align-items-center',\n                'justify-content-between'\n            )}\n        >\n            <Navbar.Brand\n                as={Link}\n                to=\"/\"\n                className={classNames('d-flex', 'align-items-center')}\n            >\n                <h4\n                    className={classNames(\n                        'd-inline',\n                        'm-0',\n                        'ml-2',\n                        'text-danger'\n                    )}\n                >\n                    Fake Nooz\n                </h4>\n            </Navbar.Brand>\n            <div\n                className={classNames(\n                    styles.gameInfo,\n                    'text-center',\n                    'd-flex',\n                    'align-items-center',\n                    'justify-content-center'\n                )}\n            >\n                <h5 className=\"mr-3\">\n                    Round\n                    <br />\n                    <small>{round}</small>\n                </h5>\n                <h5 className=\"ml-3\">\n                    Score\n                    <br />\n                    <small>{score}</small>\n                </h5>\n            </div>\n            <Nav>\n                {handleNewGame && (\n                    <Nav.Link className={linkClass} onClick={handleNewGame}>\n                        <FontAwesomeIcon\n                            icon={faPowerOff}\n                            fixedWidth\n                            className={iconClass}\n                        />\n                        New Game\n                    </Nav.Link>\n                )}\n                <Nav.Link as={Link} to=\"/user\" className={linkClass}>\n                    <FontAwesomeIcon\n                        icon={faQuestionCircle}\n                        fixedWidth\n                        className={iconClass}\n                    />\n                    About\n                </Nav.Link>\n            </Nav>\n        </Container>\n    </Navbar>\n);\n\nCustomNavbar.propTypes = {\n    round: number.isRequired,\n    score: number.isRequired,\n    setScore: func.isRequired,\n    setRound: func.isRequired,\n    handleNewGame: func\n};\n\nCustomNavbar.defaultProps = {\n    handleNewGame: undefined\n};\n\nexport default CustomNavbar;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Jumbotron, Container } from 'react-bootstrap';\nimport styles from './Footer.module.scss';\n\nconst Footer = () => (\n    <Jumbotron\n        fluid\n        className={classNames(\n            'mb-0',\n            'bg-transparent',\n            'text-center',\n            'text-muted'\n        )}\n    >\n        <Container>\n            &copy; {new Date().getFullYear()} Grant Burry & Vamshi Arugonda\n            <span className={classNames(styles.spacer, 'mx-2')}>&middot;</span>\n            {process.env.NODE_ENV === 'development' ? (\n                <span className=\"text-danger\">Development Mode</span>\n            ) : (\n                'All rights reserved'\n            )}\n        </Container>\n    </Jumbotron>\n);\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { HotKeys } from 'react-hotkeys';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Home, NotFound } from '../../pages';\nimport Navbar from '../Navbar';\nimport Footer from '../Footer';\nimport './App.scss';\n\nconst App = () => {\n    const [round, setRound] = useState(1);\n    const [score, setScore] = useState(0);\n    const [handleNewGame, setHandleNewGame] = useState();\n    const [handlePlay, setHandlePlay] = useState();\n\n    const keyHandlers = {\n        r: () => handlePlay(true),\n        f: () => handlePlay(false)\n    };\n\n    return (\n        <HotKeys handlers={keyHandlers} focused tabIndex=\"-1\">\n            <BrowserRouter>\n                <>\n                    <Helmet defaultTitle=\"Fake Nooz\" />\n                    <Navbar\n                        round={round}\n                        score={score}\n                        setScore={setScore}\n                        setRound={setRound}\n                        handleNewGame={handleNewGame}\n                    />\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Home\n                                    round={round}\n                                    score={score}\n                                    setScore={setScore}\n                                    setRound={setRound}\n                                    playHandler={handlePlay}\n                                    newGameHandler={handleNewGame}\n                                    setHandlePlay={setHandlePlay}\n                                    setHandleNewGame={setHandleNewGame}\n                                    {...props}\n                                />\n                            )}\n                        />\n                        <Route component={NotFound} />\n                    </Switch>\n                    <Footer />\n                </>\n            </BrowserRouter>\n        </HotKeys>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport Loadable from 'react-loadable';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\n\nconst rootElement = document.getElementById('root');\n\nLoadable.preloadReady().then(() =>\n    rootElement.hasChildNodes()\n        ? hydrate(<App />, rootElement)\n        : render(<App />, rootElement)\n);\n\n// Service Worker\n// https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app\nserviceWorker.unregister();\n"],"sourceRoot":""}