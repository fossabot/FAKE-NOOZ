{"version":3,"sources":["pages/Home/Result.js","pages/Home/Round.js","pages/Home/Game.js","pages/Home/feedMetadata.js","pages/Home/Home.js"],"names":["Result","_ref","_ref$article","article","source","isReal","title","link","win","handleNextArticle","winVariant","react_default","a","createElement","Fragment","Card","bg","border","className","Body","Title","as","index_es","icon","faCheckCircle","faTimesCircle","href","target","rel","faExternalLink","classNames","Button","variant","size","onClick","faChevronCircleRight","Round","handleRealButton","handleFakeButton","aria-label","dangerouslySetInnerHTML","__html","content","replace","Game","realPlay","showResult","Home_Result","Home_Round","defaultProps","undefined","feedMetadata","parser","Parser","randomElement","array","Math","floor","random","length","randomArticle","feeds","_randomElement","items","_randomElement2","error","console","Loading","faSpinnerThird","spin","Home","round","score","setScore","setRound","playHandler","newGameHandler","setHandlePlay","setHandleNewGame","_useState","useState","_useState2","Object","slicedToArray","setFeeds","_useState3","_useState4","setArticle","_useState5","_useState6","setRealPlay","_useState7","_useState8","setShowResult","fetchFeeds","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","t0","t1","t2","toConsumableArray","t3","Promise","all","map","_ref3","_callee","meta","feed","_context","parseURL","sent","abrupt","objectSpread","stop","_x","apply","this","arguments","t4","t5","t6","concat","call","handlePlay","max","handlePlayParent","advanceRound","handleNewGame","useEffect","Container","role","Helmet_default","Row","Col","sm","span","offset","md","aria-live","Home_Game","Home_Loading"],"mappings":"sUAwEeA,EA5DA,SAAAC,GAIT,IAAAC,EAAAD,EAHFE,QAAWC,EAGTF,EAHSE,OAAQC,EAGjBH,EAHiBG,OAAQC,EAGzBJ,EAHyBI,MAAOC,EAGhCL,EAHgCK,KAClCC,EAEEP,EAFFO,IACAC,EACER,EADFQ,kBAEMC,EAAaF,EAAM,UAAY,SACrC,OACIG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIN,EAAYO,OAAQP,EAAYQ,UAAU,eAChDP,EAAAC,EAAAC,cAACE,EAAA,EAAKI,KAAN,KACIR,EAAAC,EAAAC,cAACE,EAAA,EAAKK,MAAN,CAAYC,GAAG,MACVb,EAAM,WAAa,aAExBG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIC,KAAMlB,EAASmB,IAAgBC,IAC/BP,UAAU,SAEbb,EAAS,YAAc,aAE5BM,EAAAC,EAAAC,cAAA,UAAKT,GACLO,EAAAC,EAAAC,cAAA,KACIa,KAAMnB,EACNoB,OAAO,SACPC,IAAI,sBACJV,UAAU,cAETZ,EACDK,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIC,KAAMM,IACNX,UAAU,YAK1BP,EAAAC,EAAAC,cAAA,OACIK,UAAWY,IACP,SACA,yBACA,SAGJnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQC,QAAQ,QAAQC,KAAK,KAAKC,QAASzB,GACvCE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIC,KAAMY,IACNjB,UAAU,SAHlB,WCWDkB,EA1DD,SAAAnC,GAAA,IAAGE,EAAHF,EAAGE,QAASkC,EAAZpC,EAAYoC,iBAAkBC,EAA9BrC,EAA8BqC,iBAA9B,OACV3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,OAAOC,OAAO,QACnBN,EAAAC,EAAAC,cAACE,EAAA,EAAKI,KAAN,KACIR,EAAAC,EAAAC,cAACE,EAAA,EAAKK,MAAN,CAAYmB,aAAW,iBAAiBpC,EAAQG,OAChDK,EAAAC,EAAAC,cAAA,WACI2B,wBAAyB,CACrBC,OAAQtC,EAAQuC,QACXC,QAAQ,cAAe,IACvBA,QAAQ,mBAAoB,IAC5BA,QAAQ,eAAgB,IACxBA,QAAQ,QAAS,IACjBA,QACG,iEACA,SAMxBhC,EAAAC,EAAAC,cAAA,OACIK,UAAWY,IACP,SACA,qBACA,yBACA,SAGJnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACIC,QAAQ,UACRC,KAAK,KACLf,UAAU,OACVqB,aAAW,YACXL,QAASG,GAET1B,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAiBC,KAAMC,IAAeN,UAAU,SAPpD,QAUAP,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACIC,QAAQ,SACRC,KAAK,KACLf,UAAU,OACVqB,aAAW,YACXL,QAASI,GAET3B,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAiBC,KAAME,IAAeP,UAAU,SAPpD,WCxCN0B,EAAO,SAAA3C,GAOP,IANFE,EAMEF,EANFE,QACA0C,EAKE5C,EALF4C,SACAC,EAIE7C,EAJF6C,WACArC,EAGER,EAHFQ,kBACA4B,EAEEpC,EAFFoC,iBACAC,EACErC,EADFqC,iBAEM9B,EAAML,GAAWA,EAAQE,SAAWwC,EAC1C,OAAOC,EACHnC,EAAAC,EAAAC,cAACkC,EAAD,CACI5C,QAASA,EACTK,IAAKA,EACLC,kBAAmBA,IAGvBE,EAAAC,EAAAC,cAACmC,EAAD,CACI7C,QAASA,EACTkC,iBAAkBA,EAClBC,iBAAkBA,KAc9BM,EAAKK,aAAe,CAChBJ,cAAUK,GAGCN,QC1CAO,EAAA,CACX,CACI5C,KAAM,+BACNF,QAAQ,GAEZ,CACIE,KAAM,sCACNF,QAAQ,GAEZ,CACIE,KAAM,8BACNF,QAAQ,GAEZ,CACIE,KAAM,yCACNF,QAAQ,GAEZ,CACIE,KAAM,2DACNF,QAAQ,GAEZ,CACIE,KAAM,0CACNF,QAAQ,ICZV+C,EAAS,IAAIC,IAGbC,EAAgB,SAAAC,GAAK,OACvBA,EAAQA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,SAAW,MAExDC,EAAgB,SAAAC,GAClB,IAAI,IAAAC,EACyCR,EAAcO,GAAxCzD,EADf0D,EACQxD,MAAeD,EADvByD,EACuBzD,OAAQ0D,EAD/BD,EAC+BC,MAD/BC,EAEiCV,EAAcS,GAC/C,MAAO,CACH3D,SACAC,SACAC,MANJ0D,EAEQ1D,MAKJoC,QAPJsB,EAEetB,QAMXnC,KARJyD,EAEwBzD,MAQ1B,MAAO0D,GACLC,QAAQD,MAAM,iCAAkCA,KAIlDE,EAAU,kBACZxD,EAAAC,EAAAC,cAAA,KACIK,UAAWY,IACP,SACA,qBACA,2BAGJnB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIC,KAAM6C,IACNnC,KAAK,KACLoC,MAAI,EACJnD,UAAWY,IAAW,OAAQ,kBAXtC,0BAiBEwC,EAAO,SAAArE,GASP,IARFsE,EAQEtE,EARFsE,MACAC,EAOEvE,EAPFuE,MACAC,EAMExE,EANFwE,SACAC,EAKEzE,EALFyE,SACAC,EAIE1E,EAJF0E,YACAC,EAGE3E,EAHF2E,eACAC,EAEE5E,EAFF4E,cACAC,EACE7E,EADF6E,iBACEC,EACwBC,mBAAS,IADjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACKlB,EADLoB,EAAA,GACYG,EADZH,EAAA,GAAAI,EAE4BL,qBAF5BM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEKlF,EAFLmF,EAAA,GAEcC,EAFdD,EAAA,GAAAE,EAG8BR,qBAH9BS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAGK3C,EAHL4C,EAAA,GAGeC,EAHfD,EAAA,GAAAE,EAIkCX,oBAAS,GAJ3CY,EAAAV,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAIK7C,EAJL8C,EAAA,GAIiBC,EAJjBD,EAAA,GAMIE,EAAU,eAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,EAAArF,EAAAsF,KAAG,SAAAC,IAAA,OAAAF,EAAArF,EAAAwF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,GACfpB,EADeiB,EAAAI,GAAA,GAAAJ,EAAAK,GAAAxB,OAAAyB,EAAA,EAAAzB,CAERrB,GAFQwC,EAAAO,GAAAD,EAAA,EAAAN,EAAAE,KAAA,EAGDM,QAAQC,IACd3D,EAAa4D,IAAb,eAAAC,EAAA9B,OAAAc,EAAA,EAAAd,CAAAe,EAAArF,EAAAsF,KAAiB,SAAAe,EAAMC,GAAN,IAAAC,EAAA,OAAAlB,EAAArF,EAAAwF,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAEUnD,EAAOiE,SA5D/B,uCA4DqDH,EAAK3G,MAF5C,cAEH4G,EAFGC,EAAAE,KAAAF,EAAAG,OAAA,SAAArC,OAAAsC,EAAA,EAAAtC,CAAA,GAGGiC,EAASD,IAHZ,cAAAE,EAAAd,KAAA,EAAAc,EAAAZ,GAAAY,EAAA,SAKTlD,QAAQD,MAARmD,EAAAZ,IALSY,EAAAG,OAAA,SAMF,IANE,yBAAAH,EAAAK,SAAAR,EAAA,iBAAjB,gBAAAS,GAAA,OAAAV,EAAAW,MAAAC,KAAAC,YAAA,KAJO,OAAAxB,EAAAyB,GAAAzB,EAAAiB,KAAAjB,EAAA0B,IAAA,EAAA1B,EAAAO,IAAAP,EAAAyB,IAAAzB,EAAA2B,GAAA3B,EAAAI,GAAAwB,OAAAC,KAAA7B,EAAAI,GAAAJ,EAAAK,GAAAL,EAAA0B,KAAA,EAAA1B,EAAAG,IAAAH,EAAA2B,IAAA,yBAAA3B,EAAAoB,SAAAtB,MAAH,yBAAAJ,EAAA4B,MAAAC,KAAAC,YAAA,GAiBVM,EAAa,SAAA9H,GACfoE,EAAStE,EAAQE,SAAWA,EAASmE,EAAQ,EAAIhB,KAAK4E,IAAI5D,EAAQ,EAAG,IACrEkB,EAAYrF,GACZwF,GAAc,IAGZwC,EAAmB,kBAAMF,GAEzB1H,EAAoB,SAAA6H,GAClBA,GAAc5D,EAASH,EAAQ,GACnCgB,EAAW3B,EAAcC,IACzBgC,GAAc,IAGZ0C,EAAgB,kBAAM,WACxB9D,EAAS,GACTC,EAAS,GACTjE,GAAkB,KAUtB,OAPA+H,oBAAU,WACD3E,EAAMF,OACDxD,GAASoF,EAAW3B,EAAcC,IADzBiC,IAEdnB,GAAaE,EAAcwD,GAC3BzD,GAAgBE,EAAiByD,IACvC,CAAC1E,EAAO1D,EAASwE,EAAaC,IAG7BjE,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAWvH,UAAU,OAAOwH,KAAK,QAC7B/H,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,CAAQN,MAAM,cACdK,EAAAC,EAAAC,cAAA,MAAIK,UAAU,oBAAd,uBACAP,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,KACIjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAKE,YAAU,UAClE/I,EACGQ,EAAAC,EAAAC,cAACsI,EAAD,CACIhJ,QAASA,EACT0C,SAAUA,EACVC,WAAYA,EACZrC,kBAAmBA,EACnB4B,iBAAkB,kBAAM8F,GAAW,IACnC7F,iBAAkB,kBAAM6F,GAAW,MAGvCxH,EAAAC,EAAAC,cAACuI,EAAD,UAmBxB9E,EAAKrB,aAAe,CAChB0B,iBAAazB,EACb0B,oBAAgB1B,GAGLoB","file":"static/js/4.b6905d84.chunk.js","sourcesContent":["import React from 'react';\nimport { func, shape, bool } from 'prop-types';\nimport classNames from 'classnames';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faCheckCircle,\n    faTimesCircle,\n    faExternalLink,\n    faChevronCircleRight\n} from '@fortawesome/pro-solid-svg-icons';\n\nconst Result = ({\n    article: { source, isReal, title, link },\n    win,\n    handleNextArticle\n}) => {\n    const winVariant = win ? 'success' : 'danger';\n    return (\n        <>\n            <Card bg={winVariant} border={winVariant} className=\"text-center\">\n                <Card.Body>\n                    <Card.Title as=\"h4\">\n                        {win ? 'Correct!' : 'Incorrect'}\n                    </Card.Title>\n                    <h5>\n                        <FontAwesomeIcon\n                            icon={isReal ? faCheckCircle : faTimesCircle}\n                            className=\"mr-2\"\n                        />\n                        {isReal ? 'Real News' : 'Fake News'}\n                    </h5>\n                    <h6>{source}</h6>\n                    <a\n                        href={link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-white\"\n                    >\n                        {title}\n                        <FontAwesomeIcon\n                            icon={faExternalLink}\n                            className=\"ml-2\"\n                        />\n                    </a>\n                </Card.Body>\n            </Card>\n            <div\n                className={classNames(\n                    'd-flex',\n                    'justify-content-center',\n                    'mt-4'\n                )}\n            >\n                <Button variant=\"light\" size=\"lg\" onClick={handleNextArticle}>\n                    <FontAwesomeIcon\n                        icon={faChevronCircleRight}\n                        className=\"mr-2\"\n                    />\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n};\n\nResult.propTypes = {\n    article: shape({}).isRequired,\n    win: bool.isRequired,\n    handleNextArticle: func.isRequired\n};\n\nexport default Result;\n","import React from 'react';\nimport { func, shape } from 'prop-types';\nimport classNames from 'classnames';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/pro-solid-svg-icons';\n\nconst Round = ({ article, handleRealButton, handleFakeButton }) => (\n    <>\n        <Card bg=\"dark\" border=\"dark\">\n            <Card.Body>\n                <Card.Title aria-label=\"Article title\">{article.title}</Card.Title>\n                <article /* eslint-disable react/no-danger */\n                    dangerouslySetInnerHTML={{\n                        __html: article.content\n                            .replace(/<img[^>]*>/g, '')\n                            .replace(/<a[^>]*>.*<\\/a>/g, '')\n                            .replace(/<\\/?p[^>]*>/g, '')\n                            .replace(/\\n.*/g, '')\n                            .replace(\n                                /\\s*makeamericathebest.com Your Trusted Source for Faux News\\./g,\n                                ''\n                            )\n                    }}\n                />\n            </Card.Body>\n        </Card>\n        <div\n            className={classNames(\n                'd-flex',\n                'align-items-center',\n                'justify-content-center',\n                'mt-4'\n            )}\n        >\n            <Button\n                variant=\"success\"\n                size=\"lg\"\n                className=\"mr-3\"\n                aria-label=\"It's real\"\n                onClick={handleRealButton}\n            >\n                <FontAwesomeIcon icon={faCheckCircle} className=\"mr-2\" />\n                Real\n            </Button>\n            <Button\n                variant=\"danger\"\n                size=\"lg\"\n                className=\"ml-3\"\n                aria-label=\"It's fake\"\n                onClick={handleFakeButton}\n            >\n                <FontAwesomeIcon icon={faTimesCircle} className=\"mr-2\" />\n                Fake\n            </Button>\n        </div>\n    </>\n);\n\nRound.propTypes = {\n    article: shape({}).isRequired,\n    handleRealButton: func.isRequired,\n    handleFakeButton: func.isRequired\n};\n\nexport default Round;\n","import React from 'react';\nimport { func, shape, bool } from 'prop-types';\nimport Result from './Result';\nimport Round from './Round';\n\nconst Game = ({\n    article,\n    realPlay,\n    showResult,\n    handleNextArticle,\n    handleRealButton,\n    handleFakeButton\n}) => {\n    const win = article && article.isReal === realPlay;\n    return showResult ? (\n        <Result\n            article={article}\n            win={win}\n            handleNextArticle={handleNextArticle}\n        />\n    ) : (\n        <Round\n            article={article}\n            handleRealButton={handleRealButton}\n            handleFakeButton={handleFakeButton}\n        />\n    );\n};\n\nGame.propTypes = {\n    article: shape({}).isRequired,\n    realPlay: bool,\n    showResult: bool.isRequired,\n    handleNextArticle: func.isRequired,\n    handleRealButton: func.isRequired,\n    handleFakeButton: func.isRequired\n};\n\nGame.defaultProps = {\n    realPlay: undefined\n};\n\nexport default Game;\n","export default [\n    {\n        link: 'https://www.theonion.com/rss',\n        isReal: false\n    },\n    {\n        link: 'http://makeamericathebest.com/feed/',\n        isReal: false\n    },\n    {\n        link: 'https://babylonbee.com/feed',\n        isReal: false\n    },\n    {\n        link: 'https://www.wsj.com/xml/rss/3_7085.xml',\n        isReal: true\n    },\n    {\n        link: 'http://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml',\n        isReal: true\n    },\n    {\n        link: 'https://www.npr.org/rss/rss.php?id=1001',\n        isReal: true\n    }\n];\n","import React, { useState, useEffect } from 'react';\nimport { number, func } from 'prop-types';\nimport classNames from 'classnames';\nimport Helmet from 'react-helmet';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinnerThird } from '@fortawesome/pro-regular-svg-icons';\nimport Parser from 'rss-parser';\nimport Game from './Game';\nimport feedMetadata from './feedMetadata';\n\nconst parser = new Parser();\nconst CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\n\nconst randomElement = array =>\n    array ? array[Math.floor(Math.random() * array.length)] : null;\n\nconst randomArticle = feeds => {\n    try {\n        const { title: source, isReal, items } = randomElement(feeds);\n        const { title, content, link } = randomElement(items);\n        return {\n            source,\n            isReal,\n            title,\n            content,\n            link\n        };\n    } catch (error) {\n        console.error('Failed to get random article: ', error)\n    }\n};\n\nconst Loading = () => (\n    <p\n        className={classNames(\n            'd-flex',\n            'align-items-center',\n            'justify-content-center'\n        )}\n    >\n        <FontAwesomeIcon\n            icon={faSpinnerThird}\n            size=\"2x\"\n            spin\n            className={classNames('mr-3', 'text-primary')}\n        />\n        Loading news feeds...\n    </p>\n);\n\nconst Home = ({\n    round,\n    score,\n    setScore,\n    setRound,\n    playHandler,\n    newGameHandler,\n    setHandlePlay,\n    setHandleNewGame\n}) => {\n    const [feeds, setFeeds] = useState([]);\n    const [article, setArticle] = useState();\n    const [realPlay, setRealPlay] = useState();\n    const [showResult, setShowResult] = useState(false);\n\n    const fetchFeeds = async () => {\n        setFeeds([\n            ...feeds,\n            ...(await Promise.all(\n                feedMetadata.map(async meta => {\n                    try {\n                        const feed = await parser.parseURL(CORS_PROXY + meta.link);\n                        return { ...feed, ...meta };\n                    } catch (error) {\n                        console.error(error);\n                        return {};\n                    }\n                })\n            ))\n        ]);\n    };\n\n    const handlePlay = isReal => {\n        setScore(article.isReal === isReal ? score + 1 : Math.max(score - 1, 0));\n        setRealPlay(isReal);\n        setShowResult(true);\n    };\n\n    const handlePlayParent = () => handlePlay;\n\n    const handleNextArticle = advanceRound => {\n        if (advanceRound) setRound(round + 1);\n        setArticle(randomArticle(feeds));\n        setShowResult(false);\n    };\n\n    const handleNewGame = () => () => {\n        setScore(0);\n        setRound(1);\n        handleNextArticle(false);\n    };\n\n    useEffect(() => {\n        if (!feeds.length) fetchFeeds();\n        else if (!article) setArticle(randomArticle(feeds));\n        if (!playHandler) setHandlePlay(handlePlayParent);\n        if (!newGameHandler) setHandleNewGame(handleNewGame);\n    }, [feeds, article, playHandler, newGameHandler]);\n\n    return (\n        <Container className=\"py-5\" role=\"main\">\n            <Helmet title=\"FAKE NOOZ\" />\n            <h3 className=\"text-center mb-5\">Is it real or fake?</h3>\n            <Row>\n                <Col sm={{ span: 8, offset: 2 }} md={{ span: 6, offset: 3 }} aria-live=\"polite\">\n                    {article ? (\n                        <Game\n                            article={article}\n                            realPlay={realPlay}\n                            showResult={showResult}\n                            handleNextArticle={handleNextArticle}\n                            handleRealButton={() => handlePlay(true)}\n                            handleFakeButton={() => handlePlay(false)}\n                        />\n                    ) : (\n                        <Loading />\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nHome.propTypes = {\n    round: number.isRequired,\n    score: number.isRequired,\n    setScore: func.isRequired,\n    setRound: func.isRequired,\n    playHandler: func,\n    newGameHandler: func,\n    setHandlePlay: func.isRequired,\n    setHandleNewGame: func.isRequired\n};\n\nHome.defaultProps = {\n    playHandler: undefined,\n    newGameHandler: undefined\n};\n\nexport default Home;\n"],"sourceRoot":""}