{"version":3,"sources":["pages/Home/Home.js"],"names":["parser","Parser","feedMetadata","link","real","randomElement","array","Math","floor","random","length","randomArticle","feeds","_randomElement","source","title","items","_randomElement2","content","_unused","Loading","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","classNames","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_13__","icon","faSpinnerThird","size","spin","Result","_ref","_ref$article","article","win","handleNextArticle","winVariant","Fragment","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","bg","border","Body","Title","as","faCheckCircle","faTimesCircle","href","target","rel","faExternalLink","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","variant","onClick","faChevronCircleRight","Game","_ref2","realPlay","showResult","handleRealButton","handleFakeButton","dangerouslySetInnerHTML","__html","replace","defaultProps","undefined","Home","_ref3","round","score","setScore","setRound","playHandler","newGameHandler","setHandlePlay","setHandleNewGame","_useState","useState","_useState2","Object","_Users_grant_Git_CSCI_4849_Project_1_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","setFeeds","_useState3","_useState4","setArticle","_useState5","_useState6","setRealPlay","_useState7","_useState8","setShowResult","fetchFeeds","_ref4","_Users_grant_Git_CSCI_4849_Project_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_Users_grant_Git_CSCI_4849_Project_1_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee2","wrap","_context2","prev","next","t0","t1","t2","_Users_grant_Git_CSCI_4849_Project_1_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","t3","Promise","all","map","_ref5","_callee","meta","feed","_context","parseURL","concat","sent","abrupt","_Users_grant_Git_CSCI_4849_Project_1_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","console","error","stop","_x","apply","this","arguments","t4","t5","t6","call","handlePlay","isReal","max","handlePlayParent","advanceRound","handleNewGame","useEffect","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","react_helmet__WEBPACK_IMPORTED_MODULE_7___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","sm","span","offset","md"],"mappings":"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","file":"static/js/4.2afe3225.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { number, func, shape, bool } from 'prop-types';\nimport classNames from 'classnames';\nimport Helmet from 'react-helmet';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faCheckCircle,\n    faTimesCircle,\n    faExternalLink,\n    faChevronCircleRight\n} from '@fortawesome/pro-solid-svg-icons';\nimport { faSpinnerThird } from '@fortawesome/pro-regular-svg-icons';\nimport Parser from 'rss-parser';\n\nconst parser = new Parser();\nconst CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\n\nconst feedMetadata = [\n    {\n        link: 'https://www.theonion.com/rss',\n        real: false\n    },\n    {\n        link: 'http://makeamericathebest.com/feed/',\n        real: false\n    },\n    {\n        link: 'https://babylonbee.com/feed',\n        real: false\n    },\n    {\n        link: 'https://www.wsj.com/xml/rss/3_7085.xml',\n        real: true\n    },\n    {\n        link: 'http://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml',\n        real: true\n    },\n    {\n        link: 'https://www.npr.org/rss/rss.php?id=1001',\n        real: true\n    }\n];\n\nconst randomElement = array =>\n    array ? array[Math.floor(Math.random() * array.length)] : null;\n\nconst randomArticle = feeds => {\n    try {\n        const { title: source, real, items } = randomElement(feeds);\n        const { title, content, link } = randomElement(items);\n        return {\n            source,\n            real,\n            title,\n            content,\n            link\n        };\n    } catch {\n        return randomArticle(feeds);\n    }\n};\n\nconst Loading = () => (\n    <p\n        className={classNames(\n            'd-flex',\n            'align-items-center',\n            'justify-content-center'\n        )}\n    >\n        <FontAwesomeIcon\n            icon={faSpinnerThird}\n            size=\"2x\"\n            spin\n            className={classNames('mr-3', 'text-primary')}\n        />\n        Loading news feeds...\n    </p>\n);\n\nconst Result = ({\n    article: { source, real, title, link },\n    win,\n    handleNextArticle\n}) => {\n    const winVariant = win ? 'success' : 'danger';\n    return (\n        <>\n            <Card bg={winVariant} border={winVariant} className=\"text-center\">\n                <Card.Body>\n                    <Card.Title as=\"h4\">\n                        {win ? 'Correct!' : 'Incorrect'}\n                    </Card.Title>\n                    <h5>\n                        <FontAwesomeIcon\n                            icon={real ? faCheckCircle : faTimesCircle}\n                            className=\"mr-2\"\n                        />\n                        {real ? 'Real News' : 'Fake News'}\n                    </h5>\n                    <h6>{source}</h6>\n                    <a\n                        href={link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-white\"\n                    >\n                        {title}\n                        <FontAwesomeIcon\n                            icon={faExternalLink}\n                            className=\"ml-2\"\n                        />\n                    </a>\n                </Card.Body>\n            </Card>\n            <div\n                className={classNames(\n                    'd-flex',\n                    'justify-content-center',\n                    'mt-4'\n                )}\n            >\n                <Button variant=\"light\" size=\"lg\" onClick={handleNextArticle}>\n                    <FontAwesomeIcon\n                        icon={faChevronCircleRight}\n                        className=\"mr-2\"\n                    />\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n};\n\nResult.propTypes = {\n    article: shape({}).isRequired,\n    win: bool.isRequired,\n    handleNextArticle: func.isRequired\n};\n\nconst Game = ({\n    article,\n    realPlay,\n    showResult,\n    handleNextArticle,\n    handleRealButton,\n    handleFakeButton\n}) => {\n    const win = article && article.real === realPlay;\n    return showResult ? (\n        <Result\n            article={article}\n            win={win}\n            handleNextArticle={handleNextArticle}\n        />\n    ) : (\n        <>\n            <Card bg=\"dark\" border=\"dark\">\n                <Card.Body>\n                    <Card.Title>{article.title}</Card.Title>\n                    <article /* eslint-disable react/no-danger */\n                        dangerouslySetInnerHTML={{\n                            __html: article.content\n                                .replace(/<img[^>]*>/g, '')\n                                .replace(/<a[^>]*>.*<\\/a>/g, '')\n                        }}\n                    />\n                </Card.Body>\n            </Card>\n            <div\n                className={classNames(\n                    'd-flex',\n                    'align-items-center',\n                    'justify-content-center',\n                    'mt-4'\n                )}\n            >\n                <Button\n                    variant=\"success\"\n                    size=\"lg\"\n                    className=\"mr-3\"\n                    onClick={handleRealButton}\n                >\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"mr-2\" />\n                    Real\n                </Button>\n                <Button\n                    variant=\"danger\"\n                    size=\"lg\"\n                    className=\"ml-3\"\n                    onClick={handleFakeButton}\n                >\n                    <FontAwesomeIcon icon={faTimesCircle} className=\"mr-2\" />\n                    Fake\n                </Button>\n            </div>\n        </>\n    );\n};\n\nGame.propTypes = {\n    article: shape({}).isRequired,\n    realPlay: bool,\n    showResult: bool.isRequired,\n    handleNextArticle: func.isRequired,\n    handleRealButton: func.isRequired,\n    handleFakeButton: func.isRequired\n};\n\nGame.defaultProps = {\n    realPlay: undefined\n};\n\nconst Home = ({\n    round,\n    score,\n    setScore,\n    setRound,\n    playHandler,\n    newGameHandler,\n    setHandlePlay,\n    setHandleNewGame\n}) => {\n    const [feeds, setFeeds] = useState([]);\n    const [article, setArticle] = useState();\n    const [realPlay, setRealPlay] = useState();\n    const [showResult, setShowResult] = useState(false);\n\n    const fetchFeeds = async () => {\n        setFeeds([\n            ...feeds,\n            ...(await Promise.all(\n                feedMetadata.map(async meta => {\n                    try {\n                        const feed = await parser.parseURL(\n                            `${CORS_PROXY}${meta.link}`\n                        );\n                        return { ...feed, ...meta };\n                    } catch (error) {\n                        console.error(error);\n                        return [];\n                    }\n                })\n            ))\n        ]);\n    };\n\n    const handlePlay = isReal => {\n        setScore(article.real === isReal ? score + 1 : Math.max(score - 1, 0));\n        setRealPlay(isReal);\n        setShowResult(true);\n    };\n\n    const handlePlayParent = () => isReal => handlePlay(isReal);\n\n    const handleNextArticle = advanceRound => {\n        if (advanceRound) setRound(round + 1);\n        setArticle(randomArticle(feeds));\n        setShowResult(false);\n    };\n\n    const handleNewGame = () => () => {\n        setScore(0);\n        setRound(1);\n        handleNextArticle(false);\n    };\n\n    useEffect(() => {\n        if (!feeds.length) fetchFeeds();\n        else if (!article) setArticle(randomArticle(feeds));\n        if (!playHandler) setHandlePlay(handlePlayParent);\n        if (!newGameHandler) setHandleNewGame(handleNewGame);\n    }, [feeds, article, playHandler, newGameHandler]);\n\n    return (\n        <Container className=\"py-5\">\n            <Helmet title=\"Fake Nooz\" />\n            <h3 className=\"text-center mb-5\">Is it real or fake?</h3>\n            <Row>\n                <Col sm={{ span: 8, offset: 2 }} md={{ span: 6, offset: 3 }}>\n                    {article ? (\n                        <Game\n                            article={article}\n                            realPlay={realPlay}\n                            showResult={showResult}\n                            handleNextArticle={handleNextArticle}\n                            handleRealButton={() => handlePlay(true)}\n                            handleFakeButton={() => handlePlay(false)}\n                        />\n                    ) : (\n                        <Loading />\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nHome.propTypes = {\n    round: number.isRequired,\n    score: number.isRequired,\n    setScore: func.isRequired,\n    setRound: func.isRequired,\n    playHandler: func,\n    newGameHandler: func,\n    setHandlePlay: func.isRequired,\n    setHandleNewGame: func.isRequired\n};\n\nHome.defaultProps = {\n    playHandler: undefined,\n    newGameHandler: undefined\n};\n\nexport default Home;\n"],"sourceRoot":""}