{"version":3,"sources":["components/Main/Main.module.scss","components/NotFound/NotFound.module.scss","components/Footer/Footer.module.scss","serviceWorker.js","feedMetadata.js","components/About/About.js","components/Navbar/logo.svg","components/Navbar/Navbar.js","components/Loading/Loading.js","components/Main/Game/StartGame/StartGame.js","components/Main/Game/Round/Round.js","components/Main/Game/Result/Result.js","components/Main/Game/GameOver/GameOver.js","components/Main/Game/Game.js","components/Main/Main.js","components/NotFound/NotFound.js","components/Footer/Footer.js","components/App/App.js","index.js","components/Navbar/Navbar.module.scss","components/Main/Game/Round/Round.module.scss","components/Loading/Loading.module.scss"],"names":["module","exports","gameContainer","link","spacer","unregister","Boolean","window","location","hostname","match","_ref4","Object","asyncToGenerator","regenerator_default","a","mark","_callee4","wrap","_context4","prev","next","navigator","serviceWorker","ready","sent","stop","apply","this","arguments","feedMetadata","source","site","rss","isReal","SourceLink","_ref","href","label","react_default","createElement","target","rel","aria-label","concat","react_fontawesome_index_es","icon","faRssSquare","faExternalLink","fixedWidth","About","_ref2","show","onHide","Modal","size","aria-labelledby","Helmet_default","defaultTitle","Header","closeButton","Title","id","faQuestionCircle","className","Body","Table","variant","classNames","map","_ref3","key","faCheckCircle","faTimesCircle","About_SourceLink","Date","getFullYear","Footer","Button","onClick","_extends","assign","i","length","prototype","hasOwnProperty","call","logo_ref","fill","fillRule","d","logo_SvgLogo","props","viewBox","__webpack_require__","p","linkClass","styles","navLink","iconClass","GameInfo","value","gameInfo","CustomNavbar","_ref2$stats","stats","stage","round","gameRounds","score","accuracy","loading","handleNewGame","_useState","useState","_useState2","slicedToArray","showAboutModal","setShowAboutModal","Fragment","Navbar","collapseOnSelect","bg","expand","root","Container","Brand","as","Link","to","height","test","gameInfoContainer","aria-live","Navbar_GameInfo","Nav","role","faPlusCircle","components_About_About","defaultProps","undefined","Loading","isLoading","pastDelay","error","Row","Col","md","span","offset","faSpinnerThird","spin","Alert","Media","faExclamationTriangle","alertContent","type","refreshBtn","reload","StartGame","feeds","handleStartGame","handleRoundSetting","articleCount","reduce","count","feed","items","roundOptions","push","Form","onSubmit","Card","Group","controlId","Label","column","xs","sm","lg","Control","onChange","option","SwipeBadge","active","objectWithoutProperties","swipeBadge","swipeActive","Round","_ref2$article","article","title","content","handleRealPlay","handleFakePlay","cardXOffset","setCardXOffset","swipeThreshold","Math","max","document","body","scrollWidth","documentElement","offsetWidth","clientWidth","swipeReal","swipeFake","formattedArticle","replace","articleContentExists","lib_default","isMobile","onSwipeStart","console","info","onSwipeMove","x","onSwipeEnd","style","left","Round_SwipeBadge","dangerouslySetInnerHTML","__html","Result","_ref$article","win","handleNextRound","resultVariant","border","faChevronCircleRight","GameOver","_ref$stats","accuracyPercent","Number","comment","Game","realPlay","Game_StartGame_StartGame","Game_Round_Round","Game_Result_Result","Game_GameOver_GameOver","parser","Parser","randomElement","array","floor","random","randomArticle","_randomElement","_randomElement2","Main","setScore","setRound","setGameRounds","setLoading","setStage","keyHandlers","newGameHandler","setKeyHandlers","setHandleNewGame","setFeeds","_useState3","_useState4","setArticle","_useState5","_useState6","setRealPlay","fetchFeeds","_callee2","clear","_context2","t0","t1","t2","toConsumableArray","t3","Promise","all","_callee","meta","_context","parseURL","abrupt","objectSpread","_x2","t4","t5","t6","_x","handlePlay","event","preventDefault","advanceRound","filter","nextRound","_ref5","_callee3","_context3","handleNewGameParent","handleKeys","n","r","f","useEffect","xl","components_Loading_Loading","Main_Game_Game","NotFound","faMapMarkerQuestion","process","App","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","BrowserRouter","index_es","handlers","focused","tabIndex","Helmet","Navbar_Navbar","Switch","Route","exact","path","render","components_Main_Main","component","components_Footer_Footer","rootElement","getElementById","hasChildNodes","hydrate","components_App_App"],"mappings":"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","file":"static/js/main.eb39b95f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameContainer\":\"Main_gameContainer__28RK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"NotFound_link__1x8cV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spacer\":\"Footer_spacer__1fW5C\"};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nconst registerValidSW = async (swUrl, config) => {\n    try {\n        const registration = await navigator.serviceWorker.register(swUrl);\n        registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n                if (installingWorker.state === 'installed')\n                    if (navigator.serviceWorker.controller) {\n                        // At this point, the old content will have been purged and\n                        // the fresh content will have been added to the cache.\n                        // It's the perfect time to display a \"Update is available.\n                        // Please refresh.\" message in your web app.\n                        console.warn('Update is available. Please refresh.');\n                        // Execute callback\n                        if (config.onUpdate) config.onUpdate(registration);\n                    } else {\n                        // At this point, everything has been precached.\n                        // It's the perfect time to display a\n                        // \"App is cached for offline use.\" message.\n                        console.info('App is cached for offline use.');\n                        // Execute callback\n                        if (config.onSuccess) config.onSuccess(registration);\n                    }\n            };\n        };\n    } catch (error) {\n        console.error('Error during service worker registration:', error);\n    }\n};\n\nconst checkValidServiceWorker = async (swUrl, config) => {\n    try {\n        // Check if the service worker can be found. If it can't reload the page.\n        const response = fetch(swUrl);\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n            // No service worker found. Probably a different app. Reload the page.\n            const registration = await navigator.serviceWorker.ready;\n            await registration.unregister();\n            window.location.reload();\n            // Service worker found. Proceed as normal.\n        } else await registerValidSW(swUrl, config);\n    } catch {\n        console.info(\n            'No internet connection found. App is running in offline mode.'\n        );\n    }\n};\n\nexport const register = config => {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        if (publicUrl.origin !== window.location.origin) return;\n        window.addEventListener('load', async () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                await checkValidServiceWorker(swUrl, config);\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                await navigator.serviceWorker.ready;\n                console.info(\n                    'This app is being served cache-first by a service worker. To learn more, visit ' +\n                        'https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app'\n                );\n            }\n            // Is not localhost. Just register service worker.\n            else registerValidSW(swUrl, config);\n        });\n    }\n};\n\nexport const unregister = async () => {\n    if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.ready;\n        registration.unregister();\n    }\n};\n","export default [\n    {\n        source: 'The Onion',\n        site: 'https://www.theonion.com',\n        rss: 'https://www.theonion.com/rss',\n        isReal: false\n    },\n    {\n        source: 'Make America The Best',\n        site: 'http://makeamericathebest.com',\n        rss: 'http://makeamericathebest.com/feed/',\n        isReal: false\n    },\n    {\n        source: 'The Babylon Bee',\n        site: 'https://babylonbee.com',\n        rss: 'https://babylonbee.com/feed',\n        isReal: false\n    },\n    {\n        source: 'The Wall Street Journal',\n        site: 'https://www.wsj.com/news/world',\n        rss: 'https://www.wsj.com/xml/rss/3_7085.xml',\n        isReal: true\n    },\n    {\n        source: 'The New York Times',\n        site: 'https://www.nytimes.com',\n        rss: 'http://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml',\n        isReal: true\n    },\n    {\n        source: 'NPR News',\n        site: 'https://www.npr.org/sections/news/',\n        rss: 'https://www.npr.org/rss/rss.php?id=1001',\n        isReal: true\n    },\n    {\n        source: 'Reddit » /r/nottheonion',\n        site: 'https://www.reddit.com/r/nottheonion',\n        rss: 'https://www.reddit.com/r/nottheonion/.rss',\n        isReal: true\n    }\n];\n","import React from 'react';\nimport { string, bool, func } from 'prop-types';\nimport Helmet from 'react-helmet';\nimport classNames from 'classnames';\nimport { Modal, Table, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faQuestionCircle,\n    faCheckCircle,\n    faTimesCircle,\n    faRssSquare\n} from '@fortawesome/pro-solid-svg-icons';\nimport { faExternalLink } from '@fortawesome/pro-solid-svg-icons';\nimport feedMetadata from '../../feedMetadata';\n\nconst SourceLink = ({ source, href, label }) => (\n    <td>\n        <a\n            href={href}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            aria-label={`${source} ${label}`}\n        >\n            <FontAwesomeIcon\n                icon={label === 'RSS feed' ? faRssSquare : faExternalLink}\n                fixedWidth\n            />\n        </a>\n    </td>\n);\n\nSourceLink.propTypes = {\n    source: string.isRequired,\n    href: string.isRequired,\n    label: string.isRequired\n};\n\nconst About = ({ show, onHide }) => (\n    <Modal size=\"lg\" aria-labelledby=\"about-title\" show={show} onHide={onHide}>\n        <Helmet defaultTitle=\"FAKE NOOZ » About\" />\n        <Modal.Header closeButton>\n            <Modal.Title id=\"about-title\">\n                <FontAwesomeIcon\n                    icon={faQuestionCircle}\n                    fixedWidth\n                    className=\"mr-2\"\n                />\n                About <b>FAKE NOOZ</b>\n            </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <p>\n                <b>FAKE NOOZ</b> is a simple game to test how well you can\n                determine what is real news apart from fake news. We&apos;re not\n                really talking about{' '}\n                <a\n                    href=\"https://en.wikipedia.org/wiki/Fake_news\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <i>fake</i> news\n                </a>{' '}\n                here—content which is designed to deceive you—instead our fake\n                news sources are parody/satire sites that don&apos;t hesitate to\n                acknowledge their work as comedy. Here are all the news and\n                parody RSS feeds we use for <b>FAKE NOOZ</b>:\n            </p>\n            <Table\n                variant=\"dark\"\n                className={classNames('my-3', 'rounded', 'text-center')}\n            >\n                <thead>\n                    <tr>\n                        <th className=\"text-left\">Source</th>\n                        <th>Type</th>\n                        <th>Site</th>\n                        <th>RSS Feed</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {feedMetadata.map(({ source, site, rss, isReal }) => (\n                        <tr key={source}>\n                            <td className=\"text-left\">{source}</td>\n                            <td>\n                                <FontAwesomeIcon\n                                    icon={\n                                        isReal ? faCheckCircle : faTimesCircle\n                                    }\n                                    className=\"mr-2\"\n                                />\n                                {isReal ? 'Real' : 'Fake'}\n                            </td>\n                            <SourceLink\n                                source={source}\n                                href={site}\n                                label=\"site\"\n                            />\n                            <SourceLink\n                                source={source}\n                                href={rss}\n                                label=\"RSS feed\"\n                            />\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n            <p>\n                We make no claims on and take no responsibility for the contents\n                of these RSS feeds which are the property of their respective\n                owners. <b>FAKE NOOZ</b> is created by{' '}\n                <a\n                    href=\"https://github.com/Burry\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Grant Burry\n                </a>{' '}\n                and{' '}\n                <a\n                    href=\"https://github.com/varugonda\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Vamshi Arugonda\n                </a>{' '}\n                &copy; {new Date().getFullYear()}.\n            </p>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"secondary\" onClick={onHide}>\n                Close\n            </Button>\n        </Modal.Footer>\n    </Modal>\n);\n\nAbout.propTypes = {\n    show: bool.isRequired,\n    onHide: func.isRequired\n};\n\nexport default About;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"nonzero\"\n}, React.createElement(\"path\", {\n  fill: \"#B22A37\",\n  d: \"M416.611 178.633h59.694V0H536v298h-59.695v-59.683h-59.694v-59.684h-59.695v-59.266h-60.53V298h-58.442V0h58.442v59.683h60.53v59.684h59.695z\"\n}), React.createElement(\"path\", {\n  fill: \"#DC3545\",\n  d: \"M0 0h238.361v59.683H58.442v59.684h120.225v59.266H58.442V298H0z\"\n}));\n\nvar SvgLogo = function SvgLogo(props) {\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 536 298\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/logo.9117dc7c.svg\";\nexport { SvgLogo as ReactComponent };","import React, { useState } from 'react';\nimport { shape, oneOfType, number, string, func, bool } from 'prop-types';\nimport classNames from 'classnames';\nimport { NavLink as Link } from 'react-router-dom';\nimport { Container, Navbar, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faPlusCircle,\n    faQuestionCircle\n} from '@fortawesome/pro-solid-svg-icons';\nimport About from '../About';\nimport { ReactComponent as Logo } from './logo.svg';\nimport styles from './Navbar.module.scss';\n\nconst linkClass = classNames(\n    styles.link,\n    styles.navLink,\n    'd-flex',\n    'd-sm-block',\n    'text-center',\n    'align-items-center'\n);\nconst iconClass = classNames(\n    styles.icon,\n    'mr-2',\n    'mx-sm-auto',\n    'mb-sm-1',\n    'd-sm-block'\n);\n\nconst GameInfo = ({ label, value }) => (\n    <h5 className={classNames(styles.gameInfo, 'mx-sm-3', 'mb-0')}>\n        <div\n            className={classNames('d-inline', 'd-sm-block', 'mr-2', 'mr-sm-0')}\n        >\n            {label}\n        </div>\n        <small>{value}</small>\n    </h5>\n);\n\nGameInfo.propTypes = {\n    label: string.isRequired,\n    value: oneOfType([string, number]).isRequired\n};\n\nconst CustomNavbar = ({\n    stats: { stage, round, gameRounds, score, accuracy, loading },\n    handleNewGame\n}) => {\n    const [showAboutModal, setShowAboutModal] = useState(false);\n    const handleShowAboutModal = () => setShowAboutModal(true);\n    const handleCloseAboutModal = () => setShowAboutModal(false);\n    return (\n        <>\n            <Navbar\n                collapseOnSelect\n                variant=\"dark\"\n                bg=\"transparent\"\n                expand=\"sm\"\n                className={styles.root}\n            >\n                <Container\n                    className={classNames(\n                        'd-flex',\n                        'align-items-center',\n                        'justify-content-between'\n                    )}\n                >\n                    <Navbar.Brand\n                        as={Link}\n                        to=\"/\"\n                        className={classNames(\n                            styles.link,\n                            'mr-0',\n                            'd-flex',\n                            'align-items-center'\n                        )}\n                    >\n                        <Logo height={40} />\n                        <h4\n                            className={classNames(\n                                'd-none',\n                                'd-md-block',\n                                'mb-0',\n                                'ml-3',\n                                'text-primary',\n                                'font-weight-bold'\n                            )}\n                        >\n                            FAKE NOOZ\n                        </h4>\n                    </Navbar.Brand>\n                    {!loading && !/.+-game/g.test(stage) && (\n                        <div\n                            className={classNames(\n                                styles.gameInfoContainer,\n                                'text-center',\n                                'd-sm-flex',\n                                'align-items-center',\n                                'justify-content-center'\n                            )}\n                            aria-live=\"polite\"\n                            aria-label=\"Game Info\"\n                        >\n                            <GameInfo\n                                label=\"Round\"\n                                value={`${round} / ${gameRounds}`}\n                            />\n                            <GameInfo label=\"Score\" value={score} />\n                            <GameInfo label=\"Accuracy\" value={accuracy} />\n                        </div>\n                    )}\n                    <Nav role=\"navigation\">\n                        {!loading && stage !== 'start-game' && (\n                            <Nav.Link\n                                className={linkClass}\n                                onClick={handleNewGame}\n                            >\n                                <FontAwesomeIcon\n                                    icon={faPlusCircle}\n                                    fixedWidth\n                                    className={iconClass}\n                                />\n                                New Game\n                            </Nav.Link>\n                        )}\n                        <Nav.Link\n                            className={linkClass}\n                            onClick={handleShowAboutModal}\n                        >\n                            <FontAwesomeIcon\n                                icon={faQuestionCircle}\n                                fixedWidth\n                                className={iconClass}\n                            />\n                            About\n                        </Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n            <About show={showAboutModal} onHide={handleCloseAboutModal} />\n        </>\n    );\n};\n\nCustomNavbar.propTypes = {\n    stats: shape({\n        stage: string.isRequired,\n        round: number.isRequired,\n        gameRounds: oneOfType([string, number]).isRequired,\n        score: number.isRequired,\n        accuracy: string.isRequired,\n        loading: bool.isRequired\n    }).isRequired,\n    handleNewGame: func\n};\n\nCustomNavbar.defaultProps = {\n    handleNewGame: undefined\n};\n\nexport default CustomNavbar;\n","import React from 'react';\nimport { bool, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport { Container, Row, Col, Alert, Media } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinnerThird } from '@fortawesome/pro-light-svg-icons';\nimport { faExclamationTriangle } from '@fortawesome/pro-solid-svg-icons';\nimport styles from './Loading.module.scss';\n\nconst Loading = ({ isLoading, pastDelay, error }) =>\n    (isLoading && pastDelay) || error ? (\n        <Container className={classNames('py-5', 'text-primary')}>\n            <Row className=\"py-5\">\n                <Col md={{ span: 6, offset: 3 }} className=\"py-md-t\">\n                    <div className=\"text-center\">\n                        {isLoading && pastDelay && (\n                            <FontAwesomeIcon\n                                icon={faSpinnerThird}\n                                size=\"3x\"\n                                spin\n                            />\n                        )}\n                    </div>\n                    {error && (\n                        <Alert variant=\"primary\" className=\"m-0\">\n                            <Media className=\"align-items-center\">\n                                <Media className=\"mr-3\">\n                                    <FontAwesomeIcon\n                                        icon={faExclamationTriangle}\n                                        fixedWidth\n                                    />\n                                </Media>\n                                <Media.Body className={styles.alertContent}>\n                                    {process.env.NODE_ENV === 'development' ? (\n                                        <>\n                                            <b>Page Load Error</b>\n                                            <pre className=\"m-0\">\n                                                {error.message}\n                                                <br />\n                                                {error.stack}\n                                            </pre>\n                                        </>\n                                    ) : (\n                                        <>\n                                            Sorry, there was a problem loading\n                                            this page. Please{' '}\n                                            <button\n                                                type=\"button\"\n                                                className={classNames(\n                                                    styles.refreshBtn,\n                                                    'alert-link',\n                                                    'p-0',\n                                                    'bg-transparent',\n                                                    'border-0'\n                                                )}\n                                                onClick={() =>\n                                                    window.location.reload()\n                                                }\n                                            >\n                                                refresh\n                                            </button>\n                                            .\n                                        </>\n                                    )}\n                                </Media.Body>\n                            </Media>\n                        </Alert>\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    ) : null;\n\nLoading.propTypes = {\n    isLoading: bool.isRequired,\n    pastDelay: bool,\n    error: shape({\n        message: string\n    })\n};\n\nLoading.defaultProps = {\n    pastDelay: false,\n    error: undefined\n};\n\nexport default Loading;\n","import React from 'react';\nimport { arrayOf, shape, func } from 'prop-types';\nimport classNames from 'classnames';\nimport { Form, Row, Col, Card, Button } from 'react-bootstrap';\n\nconst StartGame = ({\n    stats: { gameRounds },\n    feeds,\n    handleStartGame,\n    handleRoundSetting\n}) => {\n    const articleCount = feeds.reduce(\n        (count, feed) => count + feed.items.length,\n        0\n    );\n    const roundOptions = articleCount > 10 ? [10] : [];\n    for (let i = 25; i <= articleCount; i *= 2) roundOptions.push(i);\n    return (\n        <Form onSubmit={handleStartGame}>\n            <Card className=\"text-center\">\n                <Card.Body>\n                    Can you tell what&apos;s real news and what&apos;s fake\n                    news? Take a look at these articles and see how good you are\n                    at finding fact from fiction.\n                    <Form.Group\n                        as={Row}\n                        controlId=\"number-of-rounds-form\"\n                        className={classNames('mt-3', 'text-left')}\n                    >\n                        <Form.Label\n                            column\n                            xs={{ span: 6, offset: 1 }}\n                            sm={{ span: 5, offset: 2 }}\n                            lg={{ span: 4, offset: 3 }}\n                        >\n                            Number of Rounds\n                        </Form.Label>\n                        <Col xs={4} sm={3} lg={2}>\n                            <Form.Control\n                                as=\"select\"\n                                value={gameRounds}\n                                onChange={handleRoundSetting}\n                            >\n                                {roundOptions.map(option => (\n                                    <option key={option} value={option}>\n                                        {option}\n                                    </option>\n                                ))}\n                                <option value={articleCount}>\n                                    {articleCount} (Max)\n                                </option>\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                </Card.Body>\n            </Card>\n            <div\n                className={classNames(\n                    'd-flex',\n                    'justify-content-center',\n                    'mt-4'\n                )}\n            >\n                <Button type=\"submit\" variant=\"light\" size=\"lg\">\n                    Start\n                </Button>\n            </div>\n        </Form>\n    );\n};\n\nStartGame.propTypes = {\n    stats: shape({}).isRequired,\n    feeds: arrayOf(shape({})).isRequired,\n    handleStartGame: func.isRequired,\n    handleRoundSetting: func.isRequired\n};\n\nexport default StartGame;\n","import React, { useState } from 'react';\nimport {\n    bool,\n    string,\n    func,\n    shape,\n    oneOfType,\n    object,\n    array\n} from 'prop-types';\nimport classNames from 'classnames';\nimport { isMobile } from 'react-device-detect';\nimport Swipe from 'react-easy-swipe';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/pro-solid-svg-icons';\nimport styles from './Round.module.scss';\n\nconst browserWidth = () =>\n    Math.max(\n        document.body.scrollWidth,\n        document.documentElement.scrollWidth,\n        document.body.offsetWidth,\n        document.documentElement.offsetWidth,\n        document.documentElement.clientWidth\n    );\n\nconst SwipeBadge = ({ active, label, variant, icon, className, ...props }) => (\n    <div\n        className={classNames(\n            styles.swipeBadge,\n            styles[`swipe${label}`],\n            active && styles.swipeActive,\n            'text-center',\n            `text-${variant}`,\n            className\n        )}\n        {...props}\n    >\n        <FontAwesomeIcon\n            icon={icon}\n            size=\"2x\"\n            className={classNames('mx-auto', 'mb-1')}\n        />\n        {label}\n    </div>\n);\n\nSwipeBadge.propTypes = {\n    active: bool.isRequired,\n    label: string.isRequired,\n    variant: string.isRequired,\n    icon: oneOfType([object, array, string]).isRequired,\n    className: string\n};\n\nSwipeBadge.defaultProps = {\n    className: undefined\n};\n\nconst Round = ({\n    article: { title, content },\n    handleRealPlay,\n    handleFakePlay\n}) => {\n    const [cardXOffset, setCardXOffset] = useState(0);\n\n    const swipeThreshold = browserWidth() / 2.5;\n    const swipeReal = cardXOffset < -swipeThreshold;\n    const swipeFake = cardXOffset > swipeThreshold;\n\n    const onSwipeStart = () => {\n        console.info('Start swiping...');\n    };\n\n    const onSwipeMove = ({ x }) => setCardXOffset(x);\n\n    const onSwipeEnd = () => {\n        if (swipeReal) handleRealPlay();\n        else if (swipeFake) handleFakePlay();\n        else setCardXOffset(0);\n    };\n\n    const formattedArticle = content\n        .replace(/^\\s+/g, '') // Remove lead space\n        .replace(/^(?:&nbsp;)+/g, '') // Remove lead space\n        .replace(/<img[^>]*>/g, '') // Remove images\n        .replace(/<a[^>]*>.*<\\/a>/g, '') // Remove links\n        .replace(/<\\/?p[^>]*>/g, '') // Remove paragraphs\n        .replace(/<table[^>]*>.*<\\/table>/g, '') // Remove tables (Reddit)\n        .replace(/submitted by.*/g, '') // Remove submitted by (Reddit)\n        .replace(/<br.*/g, '') // Remove line breaks and following content\n        .replace(/The post \\.\\n/g, '') // Remove \"The post .\"\n        .replace(/^.$/g, '') // Remove period\n        .replace(\n            /\\s*makeamericathebest.com Your Trusted Source for Faux News\\./g,\n            ''\n        ); // Remove \"Make America The Best\" tagline\n    const articleContentExists = formattedArticle && formattedArticle !== '';\n\n    return (\n        <>\n            <h3 className={classNames('text-center', 'mb-4', 'mb-md-5')}>\n                Is it real or fake?\n            </h3>\n            <Swipe\n                {...isMobile && {\n                    onSwipeStart,\n                    onSwipeMove,\n                    onSwipeEnd\n                }}\n            >\n                <div\n                    className={classNames(\n                        'd-flex',\n                        'align-items-center',\n                        'position-relative'\n                    )}\n                    style={{ left: cardXOffset }}\n                >\n                    <SwipeBadge\n                        active={swipeFake}\n                        label=\"Fake\"\n                        variant=\"primary\"\n                        icon={faTimesCircle}\n                    />\n                    <Card>\n                        <Card.Body>\n                            <Card.Title\n                                aria-label=\"Article title\"\n                                className={classNames(\n                                    !articleContentExists && 'mb-0'\n                                )}\n                            >\n                                {title}\n                            </Card.Title>\n                            {articleContentExists && (\n                                <article /* eslint-disable react/no-danger */\n                                    dangerouslySetInnerHTML={{\n                                        __html: formattedArticle\n                                    }}\n                                />\n                            )}\n                        </Card.Body>\n                    </Card>\n                    <SwipeBadge\n                        active={swipeReal}\n                        label=\"Real\"\n                        variant=\"success\"\n                        icon={faCheckCircle}\n                    />\n                </div>\n            </Swipe>\n            <div\n                className={classNames(\n                    'd-flex',\n                    'align-items-center',\n                    'justify-content-center',\n                    'mt-4'\n                )}\n            >\n                <Button\n                    variant=\"success\"\n                    size=\"lg\"\n                    aria-label=\"It's real\"\n                    onClick={handleRealPlay}\n                    className=\"mr-3\"\n                >\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"mr-2\" />\n                    Real\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    size=\"lg\"\n                    aria-label=\"It's fake\"\n                    onClick={handleFakePlay}\n                    className=\"ml-3\"\n                >\n                    <FontAwesomeIcon icon={faTimesCircle} className=\"mr-2\" />\n                    Fake\n                </Button>\n            </div>\n        </>\n    );\n};\n\nRound.propTypes = {\n    article: shape({}).isRequired,\n    handleRealPlay: func.isRequired,\n    handleFakePlay: func.isRequired\n};\n\nexport default Round;\n","import React from 'react';\nimport { func, shape, bool } from 'prop-types';\nimport classNames from 'classnames';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faCheckCircle,\n    faTimesCircle,\n    faExternalLink,\n    faChevronCircleRight\n} from '@fortawesome/pro-solid-svg-icons';\n\nconst Result = ({\n    article: { source, isReal, title, link },\n    win,\n    handleNextRound\n}) => {\n    const resultVariant = win ? 'success' : 'primary';\n    return (\n        <>\n            <h3\n                className={classNames(\n                    'text-center',\n                    `text-${resultVariant}`,\n                    'mb-4',\n                    'mb-md-5'\n                )}\n            >\n                {win ? 'Correct!' : 'Incorrect'}\n            </h3>\n            <Card\n                bg={resultVariant}\n                border={resultVariant}\n                className=\"text-center\"\n            >\n                <Card.Body>\n                    <Card.Title>\n                        <FontAwesomeIcon\n                            icon={isReal ? faCheckCircle : faTimesCircle}\n                            className=\"mr-2\"\n                        />\n                        {isReal ? 'Real News' : 'Fake News'}\n                    </Card.Title>\n                    <h6>{source}</h6>\n                    <a\n                        href={link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-white\"\n                    >\n                        {title}\n                        <FontAwesomeIcon\n                            icon={faExternalLink}\n                            className=\"ml-2\"\n                        />\n                    </a>\n                </Card.Body>\n            </Card>\n            <div\n                className={classNames(\n                    'd-flex',\n                    'justify-content-center',\n                    'mt-4'\n                )}\n            >\n                <Button variant=\"light\" size=\"lg\" onClick={handleNextRound}>\n                    <FontAwesomeIcon\n                        icon={faChevronCircleRight}\n                        className=\"mr-2\"\n                    />\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n};\n\nResult.propTypes = {\n    article: shape({}).isRequired,\n    win: bool.isRequired,\n    handleNextRound: func.isRequired\n};\n\nexport default Result;\n","import React from 'react';\nimport { shape, oneOfType, number, string, func } from 'prop-types';\nimport classNames from 'classnames';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/pro-solid-svg-icons';\n\nconst GameOver = ({\n    stats: { gameRounds, score, accuracy },\n    handleNewGame\n}) => {\n    const accuracyPercent = Number(accuracy.replace(/%/g, ''));\n    let comment = 'Was that your best shot?';\n    let resultVariant = 'dark';\n\n    if (accuracyPercent === 100) comment = 'Perfect!';\n    else if (accuracyPercent >= 90) comment = 'Almost Perfect';\n    else if (accuracyPercent >= 80) comment = 'Very Nice';\n    else if (accuracyPercent >= 70) comment = 'Good Job';\n    else if (accuracyPercent >= 60) comment = 'Not Bad';\n    else if (accuracyPercent >= 50) comment = \"It's the effort that counts.\";\n    else if (accuracyPercent >= 33) comment = 'Looks like you got fooled.';\n    else if (accuracyPercent >= 10) comment = 'Well… you tried.';\n\n    if (accuracyPercent >= 66) resultVariant = 'success';\n    else if (accuracyPercent <= 33) resultVariant = 'danger';\n\n    return (\n        <>\n            <h3 className={classNames('text-center', 'mb-4', 'mb-md-5')}>\n                Game Over\n            </h3>\n            <Card\n                bg={resultVariant}\n                border={resultVariant}\n                className=\"text-center\"\n            >\n                <Card.Body>\n                    <Card.Title aria-label=\"Article title\">\n                        {comment}\n                    </Card.Title>\n                    <div\n                        className={classNames(\n                            'text-center',\n                            'mx-auto',\n                            'd-flex',\n                            'align-items-center',\n                            'justify-content-center'\n                        )}\n                    >\n                        <h6>\n                            Rounds\n                            <br />\n                            <small>{gameRounds}</small>\n                        </h6>\n                        <h6 className=\"mx-2 mx-md-3\">\n                            Score\n                            <br />\n                            <small>{score}</small>\n                        </h6>\n                        <h6>\n                            Accuracy\n                            <br />\n                            <small>{accuracy}</small>\n                        </h6>\n                    </div>\n                </Card.Body>\n            </Card>\n            <div\n                className={classNames(\n                    'd-flex',\n                    'justify-content-center',\n                    'mt-4'\n                )}\n            >\n                <Button variant=\"light\" size=\"lg\" onClick={handleNewGame}>\n                    <FontAwesomeIcon icon={faPlusCircle} className=\"mr-2\" />\n                    New Game\n                </Button>\n            </div>\n        </>\n    );\n};\n\nGameOver.propTypes = {\n    stats: shape({\n        gameRounds: oneOfType([string, number]).isRequired,\n        score: number.isRequired,\n        accuracy: string.isRequired\n    }).isRequired,\n    handleNewGame: func.isRequired\n};\n\nexport default GameOver;\n","import React from 'react';\nimport { func, arrayOf, shape, bool } from 'prop-types';\nimport StartGame from './StartGame';\nimport Round from './Round';\nimport Result from './Result';\nimport GameOver from './GameOver';\n\nconst Game = ({\n    stats,\n    feeds,\n    article,\n    realPlay,\n    handleStartGame,\n    handleRoundSetting,\n    handleNextRound,\n    handleRealPlay,\n    handleFakePlay,\n    handleNewGame\n}) => {\n    const win = article && article.isReal === realPlay;\n\n    switch (stats.stage) {\n        case 'start-game':\n            return (\n                <StartGame\n                    stats={stats}\n                    feeds={feeds}\n                    handleStartGame={handleStartGame}\n                    handleRoundSetting={handleRoundSetting}\n                />\n            );\n        case 'round':\n            return (\n                <Round\n                    article={article}\n                    handleRealPlay={handleRealPlay}\n                    handleFakePlay={handleFakePlay}\n                />\n            );\n        case 'result':\n            return (\n                <Result\n                    article={article}\n                    win={win}\n                    handleNextRound={handleNextRound}\n                />\n            );\n        case 'end-game':\n            return <GameOver stats={stats} handleNewGame={handleNewGame} />;\n        default:\n            return null;\n    }\n};\n\nGame.propTypes = {\n    stats: shape({}).isRequired,\n    feeds: arrayOf(shape({})),\n    article: shape({}).isRequired,\n    realPlay: bool,\n    handleStartGame: func.isRequired,\n    handleRoundSetting: func.isRequired,\n    handleNextRound: func.isRequired,\n    handleRealPlay: func.isRequired,\n    handleFakePlay: func.isRequired,\n    handleNewGame: func.isRequired\n};\n\nGame.defaultProps = {\n    feeds: undefined,\n    realPlay: undefined\n};\n\nexport default Game;\n","import React, { useState, useEffect } from 'react';\nimport { shape, oneOfType, string, number, func, bool } from 'prop-types';\nimport classNames from 'classnames';\nimport Helmet from 'react-helmet';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Parser from 'rss-parser';\nimport Loading from '../Loading';\nimport Game from './Game';\nimport feedMetadata from '../../feedMetadata';\nimport styles from './Main.module.scss';\n\nconst parser = new Parser();\nconst CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\n\nconst randomElement = array =>\n    array ? array[Math.floor(Math.random() * array.length)] : null;\n\nconst randomArticle = feeds => {\n    try {\n        const { source, isReal, items } = randomElement(feeds);\n        const { title, content, link } = randomElement(items);\n        return { source, isReal, title, content, link };\n    } catch (error) {\n        return null;\n    }\n};\n\nconst Main = ({\n    stats,\n    setScore,\n    setRound,\n    setGameRounds,\n    setLoading,\n    setStage,\n    keyHandlers,\n    newGameHandler,\n    setKeyHandlers,\n    setHandleNewGame\n}) => {\n    const [feeds, setFeeds] = useState([]);\n    const [article, setArticle] = useState();\n    const [realPlay, setRealPlay] = useState();\n    const { stage, round, gameRounds, score, loading } = stats;\n\n    const fetchFeeds = async clear => {\n        setFeeds([\n            ...(clear ? [] : feeds),\n            ...(await Promise.all(\n                feedMetadata.map(async meta => {\n                    try {\n                        const feed = await parser.parseURL(\n                            CORS_PROXY + meta.rss\n                        );\n                        return { ...feed, ...meta };\n                    } catch (error) {\n                        console.error(error);\n                        return {};\n                    }\n                })\n            ))\n        ]);\n    };\n\n    const handlePlay = isReal => {\n        setScore(\n            article.isReal === isReal ? score + 1 : Math.max(score - 1, 0)\n        );\n        setRealPlay(isReal);\n        setStage('result');\n    };\n\n    const handleStartGame = event => {\n        if (event) event.preventDefault();\n        setStage('round');\n    };\n\n    const handleRoundSetting = event => setGameRounds(event.target.value);\n\n    const handleNextRound = advanceRound => {\n        if (round < gameRounds) {\n            if (advanceRound) setRound(round + 1);\n            setFeeds(\n                feeds.map(feed => ({\n                    items: feed.items.filter(\n                        ({ link }) => link !== article.link\n                    ),\n                    ...feed\n                }))\n            );\n            const nextRound = randomArticle(feeds);\n            if (nextRound) {\n                setArticle(nextRound);\n                setStage('round');\n            } else setStage('end-game');\n        } else setStage('end-game');\n    };\n\n    const handleNewGame = async () => {\n        setLoading(true);\n        await fetchFeeds(true);\n        handleNextRound(false);\n        setStage('start-game');\n        setRound(1);\n        setScore(0);\n        setLoading(false);\n    };\n\n    const handleNewGameParent = () => handleNewGame;\n\n    const handleKeys = {\n        n: () => {\n            console.info('Next!');\n            if (!loading)\n                switch (stage) {\n                    case 'result':\n                        handleNextRound(true);\n                        break;\n                    case 'start-game':\n                        handleStartGame();\n                        break;\n                    case 'end-game':\n                        handleNewGame();\n                        break;\n                    default:\n                        break;\n                }\n        },\n        r: () => stage === 'round' && handlePlay(true),\n        f: () => stage === 'round' && handlePlay(false)\n    };\n\n    useEffect(() => {\n        if (!feeds.length) fetchFeeds();\n        else if (!article) setArticle(randomArticle(feeds));\n        else setLoading(false);\n        if (!keyHandlers) setKeyHandlers(handleKeys);\n        if (!newGameHandler) setHandleNewGame(handleNewGameParent);\n    }, [feeds, article, keyHandlers, newGameHandler]);\n\n    return (\n        <Container role=\"main\">\n            <Helmet title=\"FAKE NOOZ\" />\n            <Row>\n                <Col\n                    sm={{ span: 10, offset: 1 }}\n                    lg={{ span: 8, offset: 2 }}\n                    xl={{ span: 6, offset: 3 }}\n                    aria-live=\"polite\"\n                    className={classNames(\n                        styles.gameContainer,\n                        'py-4',\n                        'py-md-5'\n                    )}\n                >\n                    {loading ? (\n                        <Loading isLoading pastDelay />\n                    ) : (\n                        <Game\n                            {...{\n                                stats,\n                                feeds,\n                                article,\n                                realPlay,\n                                handleStartGame,\n                                handleRoundSetting,\n                                handleNextRound,\n                                handleNewGame\n                            }}\n                            handleRealPlay={() => handlePlay(true)}\n                            handleFakePlay={() => handlePlay(false)}\n                        />\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nMain.propTypes = {\n    stats: shape({\n        round: number.isRequired,\n        gameRounds: oneOfType([string, number]).isRequired,\n        score: number.isRequired,\n        loading: bool.isRequired\n    }).isRequired,\n    setScore: func.isRequired,\n    setRound: func.isRequired,\n    setGameRounds: func.isRequired,\n    setLoading: func.isRequired,\n    setStage: func.isRequired,\n    keyHandlers: shape({}),\n    newGameHandler: func,\n    setKeyHandlers: func.isRequired,\n    setHandleNewGame: func.isRequired\n};\n\nMain.defaultProps = {\n    keyHandlers: undefined,\n    newGameHandler: undefined\n};\n\nexport default Main;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerQuestion } from '@fortawesome/pro-solid-svg-icons';\nimport styles from './NotFound.module.scss';\n\nconst NotFound = () => (\n    <Container className=\"py-5 text-center\">\n        <Helmet title=\"FAKE NOOZ » Not Found\" />\n        <Row>\n            <Col\n                xs={12}\n                sm={{ span: 8, offset: 2 }}\n                md={{ span: 6, offset: 3 }}\n                lg={{ span: 4, offset: 4 }}\n            >\n                <FontAwesomeIcon\n                    icon={faMapMarkerQuestion}\n                    size=\"5x\"\n                    className={classNames('mb-4', 'text-muted')}\n                />\n                <h1>\n                    404: <b>FAKE PAGE</b>\n                </h1>\n                <p className=\"mb-4\">Looks like this page doesn&apos;t exist.</p>\n                <Button\n                    as={Link}\n                    to=\"/\"\n                    variant=\"light\"\n                    type={null}\n                    className={styles.link}\n                >\n                    Back to Game\n                </Button>\n            </Col>\n        </Row>\n    </Container>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Container } from 'react-bootstrap';\nimport styles from './Footer.module.scss';\n\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\nconst Footer = () => (\n    <Container className={classNames('py-5', 'text-center', 'text-muted')}>\n        &copy; {new Date().getFullYear()} Grant Burry & Vamshi Arugonda\n        <span\n            className={classNames(\n                styles.spacer,\n                'd-none',\n                'd-sm-inline',\n                'mx-2'\n            )}\n        >\n            &middot;\n        </span>\n        <span\n            className={classNames(\n                'd-block',\n                'd-sm-inline',\n                isDevelopment && 'text-primary'\n            )}\n        >\n            {isDevelopment ? 'Development Mode' : 'All rights reserved'}\n        </span>\n    </Container>\n);\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { HotKeys } from 'react-hotkeys';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from '../Navbar';\nimport Main from '../Main';\nimport NotFound from '../NotFound';\nimport Footer from '../Footer';\nimport './App.scss';\n\nconst App = () => {\n    const [loading, setLoading] = useState(true);\n    const [stage, setStage] = useState('start-game');\n    const [round, setRound] = useState(1);\n    const [gameRounds, setGameRounds] = useState(10);\n    const [score, setScore] = useState(0);\n    const [keyHandlers, setKeyHandlers] = useState();\n    const [handleNewGame, setHandleNewGame] = useState();\n\n    const accuracy = `${Math.round(\n        (100 * score) / (stage === 'round' ? Math.max(1, round - 1) : round)\n    )}%`;\n\n    const stats = { stage, round, gameRounds, score, accuracy, loading };\n\n    return (\n        <BrowserRouter>\n            <HotKeys\n                handlers={{\n                    n: () => {\n                        console.info('Next!');\n                    }\n                }}\n                focused\n                tabIndex=\"-1\"\n            >\n                <Helmet defaultTitle=\"FAKE NOOZ\" />\n                <Navbar stats={stats} handleNewGame={handleNewGame} />\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={props => (\n                            <Main\n                                {...{\n                                    stats,\n                                    setScore,\n                                    setRound,\n                                    setGameRounds,\n                                    setLoading,\n                                    setStage,\n                                    keyHandlers,\n                                    setKeyHandlers,\n                                    setHandleNewGame,\n                                    ...props\n                                }}\n                                newGameHandler={handleNewGame}\n                            />\n                        )}\n                    />\n                    <Route component={NotFound} />\n                </Switch>\n                <Footer />\n            </HotKeys>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement.hasChildNodes()) hydrate(<App />, rootElement);\nelse render(<App />, rootElement);\n\n// Service Worker\n// https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Navbar_root__2-Nd-\",\"link\":\"Navbar_link__2ukb4\",\"navLink\":\"Navbar_navLink__2u4IW\",\"gameInfoContainer\":\"Navbar_gameInfoContainer__o0u7F\",\"icon\":\"Navbar_icon__1-fNR\",\"gameInfo\":\"Navbar_gameInfo__2oIxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swipeBadge\":\"Round_swipeBadge__19-tH\",\"swipeReal\":\"Round_swipeReal__1dABQ\",\"swipeFake\":\"Round_swipeFake__3vdbu\",\"swipeActive\":\"Round_swipeActive__1K7s8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"refreshBtn\":\"Loading_refreshBtn__2_Bkj\",\"alertContent\":\"Loading_alertContent__M--w9\"};"],"sourceRoot":""}