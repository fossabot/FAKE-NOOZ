{"version":3,"sources":["pages/Home/Result.js","pages/Home/Round.js","pages/Home/Game.js","pages/Home/Home.js"],"names":["Result","_ref","_ref$article","article","source","isReal","title","link","win","handleNextArticle","winVariant","react_default","a","createElement","Fragment","className","classNames","concat","Card","bg","border","Body","Title","index_es","icon","faCheckCircle","faTimesCircle","href","target","rel","faExternalLink","Button","variant","size","onClick","faChevronCircleRight","Round","content","handleRealButton","handleFakeButton","formattedArticle","replace","aria-label","dangerouslySetInnerHTML","__html","Game","realPlay","showResult","Home_Result","Home_Round","defaultProps","undefined","parser","Parser","randomElement","array","Math","floor","random","length","randomArticle","feeds","_randomElement","items","_randomElement2","console","info","error","Loading","faSpinnerThird","spin","Home","round","score","setScore","setRound","playHandler","newGameHandler","setHandlePlay","setHandleNewGame","_useState","useState","_useState2","Object","slicedToArray","setFeeds","_useState3","_useState4","setArticle","_useState5","_useState6","setRealPlay","_useState7","_useState8","setShowResult","fetchFeeds","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","t0","t1","t2","toConsumableArray","t3","Promise","all","feedMetadata","map","_ref3","_callee","meta","feed","_context","parseURL","rss","sent","abrupt","objectSpread","stop","_x","apply","this","arguments","t4","t5","t6","call","handlePlay","max","handlePlayParent","advanceRound","handleNewGame","useEffect","Container","role","Helmet_default","Row","Col","sm","span","offset","md","aria-live","Home_Game","Home_Loading"],"mappings":"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","file":"static/js/4.31bf70fb.chunk.js","sourcesContent":["import React from 'react';\nimport { func, shape, bool } from 'prop-types';\nimport classNames from 'classnames';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faCheckCircle,\n    faTimesCircle,\n    faExternalLink,\n    faChevronCircleRight\n} from '@fortawesome/pro-solid-svg-icons';\n\nconst Result = ({\n    article: { source, isReal, title, link },\n    win,\n    handleNextArticle\n}) => {\n    const winVariant = win ? 'success' : 'primary';\n    return (\n        <>\n            <h3\n                className={classNames(\n                    'text-center',\n                    `text-${winVariant}`,\n                    'mb-5'\n                )}\n            >\n                {win ? 'Correct!' : 'Incorrect'}\n            </h3>\n            <Card bg={winVariant} border={winVariant} className=\"text-center\">\n                <Card.Body>\n                    <Card.Title>\n                        <FontAwesomeIcon\n                            icon={isReal ? faCheckCircle : faTimesCircle}\n                            className=\"mr-2\"\n                        />\n                        {isReal ? 'Real News' : 'Fake News'}\n                    </Card.Title>\n                    <h6>{source}</h6>\n                    <a\n                        href={link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-white\"\n                    >\n                        {title}\n                        <FontAwesomeIcon\n                            icon={faExternalLink}\n                            className=\"ml-2\"\n                        />\n                    </a>\n                </Card.Body>\n            </Card>\n            <div\n                className={classNames(\n                    'd-flex',\n                    'justify-content-center',\n                    'mt-4'\n                )}\n            >\n                <Button variant=\"light\" size=\"lg\" onClick={handleNextArticle}>\n                    <FontAwesomeIcon\n                        icon={faChevronCircleRight}\n                        className=\"mr-2\"\n                    />\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n};\n\nResult.propTypes = {\n    article: shape({}).isRequired,\n    win: bool.isRequired,\n    handleNextArticle: func.isRequired\n};\n\nexport default Result;\n","import React from 'react';\nimport { func, shape } from 'prop-types';\nimport classNames from 'classnames';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/pro-solid-svg-icons';\n\nconst Round = ({\n    article: { title, content },\n    handleRealButton,\n    handleFakeButton\n}) => {\n    const formattedArticle = content\n        .replace(/<img[^>]*>/g, '') // Remove images\n        .replace(/<a[^>]*>.*<\\/a>/g, '') // Remove links\n        .replace(/<\\/?p[^>]*>/g, '') // Remove paragraphs\n        .replace(/<table[^>]*>.*<\\/table>/g, '') // Remove tables (Reddit)\n        .replace(/<br[^>]*>.*/g, '') // Remove line breaks\n        .replace(\n            /\\s*makeamericathebest.com Your Trusted Source for Faux News\\./g,\n            ''\n        ); // Remove \"Make America The Best\" tagline\n    return (\n        <>\n            <h3 className={classNames('text-center', 'mb-5')}>\n                Is it real or fake?\n            </h3>\n            <Card bg=\"dark\" border=\"dark\">\n                <Card.Body>\n                    <Card.Title aria-label=\"Article title\">{title}</Card.Title>\n                    {formattedArticle && formattedArticle !== '' ? (\n                        <article /* eslint-disable react/no-danger */\n                            dangerouslySetInnerHTML={{\n                                __html: formattedArticle\n                            }}\n                        />\n                    ) : (\n                        <span className=\"text-muted\">No content</span>\n                    )}\n                </Card.Body>\n            </Card>\n            <div\n                className={classNames(\n                    'd-flex',\n                    'align-items-center',\n                    'justify-content-center',\n                    'mt-4'\n                )}\n            >\n                <Button\n                    variant=\"success\"\n                    size=\"lg\"\n                    className=\"mr-3\"\n                    aria-label=\"It's real\"\n                    onClick={handleRealButton}\n                >\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"mr-2\" />\n                    Real\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    size=\"lg\"\n                    className=\"ml-3\"\n                    aria-label=\"It's fake\"\n                    onClick={handleFakeButton}\n                >\n                    <FontAwesomeIcon icon={faTimesCircle} className=\"mr-2\" />\n                    Fake\n                </Button>\n            </div>\n        </>\n    );\n};\n\nRound.propTypes = {\n    article: shape({}).isRequired,\n    handleRealButton: func.isRequired,\n    handleFakeButton: func.isRequired\n};\n\nexport default Round;\n","import React from 'react';\nimport { func, shape, bool } from 'prop-types';\nimport Result from './Result';\nimport Round from './Round';\n\nconst Game = ({\n    article,\n    realPlay,\n    showResult,\n    handleNextArticle,\n    handleRealButton,\n    handleFakeButton\n}) => {\n    const win = article && article.isReal === realPlay;\n    return showResult ? (\n        <Result\n            article={article}\n            win={win}\n            handleNextArticle={handleNextArticle}\n        />\n    ) : (\n        <Round\n            article={article}\n            handleRealButton={handleRealButton}\n            handleFakeButton={handleFakeButton}\n        />\n    );\n};\n\nGame.propTypes = {\n    article: shape({}).isRequired,\n    realPlay: bool,\n    showResult: bool.isRequired,\n    handleNextArticle: func.isRequired,\n    handleRealButton: func.isRequired,\n    handleFakeButton: func.isRequired\n};\n\nGame.defaultProps = {\n    realPlay: undefined\n};\n\nexport default Game;\n","import React, { useState, useEffect } from 'react';\nimport { number, func } from 'prop-types';\nimport classNames from 'classnames';\nimport Helmet from 'react-helmet';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinnerThird } from '@fortawesome/pro-regular-svg-icons';\nimport Parser from 'rss-parser';\nimport Game from './Game';\nimport feedMetadata from '../../feedMetadata';\n\nconst parser = new Parser();\nconst CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\n\nconst randomElement = array =>\n    array ? array[Math.floor(Math.random() * array.length)] : null;\n\nconst randomArticle = feeds => {\n    try {\n        const { source, isReal, items } = randomElement(feeds);\n        const { title, content, link } = randomElement(items);\n        console.info({\n            article: {\n                source,\n                isReal,\n                title,\n                content,\n                link\n            }\n        });\n        return {\n            source,\n            isReal,\n            title,\n            content,\n            link\n        };\n    } catch (error) {\n        console.error('Failed to get random article: ', error);\n        return null;\n    }\n};\n\nconst Loading = () => (\n    <p\n        className={classNames(\n            'd-flex',\n            'align-items-center',\n            'justify-content-center'\n        )}\n    >\n        <FontAwesomeIcon\n            icon={faSpinnerThird}\n            size=\"2x\"\n            spin\n            className={classNames('mr-3', 'text-primary')}\n        />\n        Loading news feeds...\n    </p>\n);\n\nconst Home = ({\n    round,\n    score,\n    setScore,\n    setRound,\n    playHandler,\n    newGameHandler,\n    setHandlePlay,\n    setHandleNewGame\n}) => {\n    const [feeds, setFeeds] = useState([]);\n    const [article, setArticle] = useState();\n    const [realPlay, setRealPlay] = useState();\n    const [showResult, setShowResult] = useState(false);\n\n    const fetchFeeds = async () => {\n        setFeeds([\n            ...feeds,\n            ...(await Promise.all(\n                feedMetadata.map(async meta => {\n                    try {\n                        const feed = await parser.parseURL(\n                            CORS_PROXY + meta.rss\n                        );\n                        return { ...feed, ...meta };\n                    } catch (error) {\n                        console.error(error);\n                        return {};\n                    }\n                })\n            ))\n        ]);\n    };\n\n    const handlePlay = isReal => {\n        setScore(\n            article.isReal === isReal ? score + 1 : Math.max(score - 1, 0)\n        );\n        setRealPlay(isReal);\n        setShowResult(true);\n    };\n\n    const handlePlayParent = () => handlePlay;\n\n    const handleNextArticle = advanceRound => {\n        if (advanceRound) setRound(round + 1);\n        setArticle(randomArticle(feeds));\n        setShowResult(false);\n    };\n\n    const handleNewGame = () => () => {\n        setScore(0);\n        setRound(1);\n        handleNextArticle(false);\n    };\n\n    useEffect(() => {\n        if (!feeds.length) fetchFeeds();\n        else if (!article) setArticle(randomArticle(feeds));\n        if (!playHandler) setHandlePlay(handlePlayParent);\n        if (!newGameHandler) setHandleNewGame(handleNewGame);\n    }, [feeds, article, playHandler, newGameHandler]);\n\n    return (\n        <Container className=\"py-5\" role=\"main\">\n            <Helmet title=\"FAKE NOOZ\" />\n            <Row>\n                <Col\n                    sm={{ span: 8, offset: 2 }}\n                    md={{ span: 6, offset: 3 }}\n                    aria-live=\"polite\"\n                >\n                    {article ? (\n                        <Game\n                            article={article}\n                            realPlay={realPlay}\n                            showResult={showResult}\n                            handleNextArticle={handleNextArticle}\n                            handleRealButton={() => handlePlay(true)}\n                            handleFakeButton={() => handlePlay(false)}\n                        />\n                    ) : (\n                        <Loading />\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nHome.propTypes = {\n    round: number.isRequired,\n    score: number.isRequired,\n    setScore: func.isRequired,\n    setRound: func.isRequired,\n    playHandler: func,\n    newGameHandler: func,\n    setHandlePlay: func.isRequired,\n    setHandleNewGame: func.isRequired\n};\n\nHome.defaultProps = {\n    playHandler: undefined,\n    newGameHandler: undefined\n};\n\nexport default Home;\n"],"sourceRoot":""}