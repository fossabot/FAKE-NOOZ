{"version":3,"sources":["pages/Home/Result.js","pages/Home/Game.js","pages/Home/feedMetadata.js","pages/Home/Home.js"],"names":["Result","_ref","_ref$article","article","source","real","title","link","win","handleNextArticle","winVariant","react_default","a","createElement","Fragment","Card","bg","border","className","Body","Title","as","index_es","icon","faCheckCircle","faTimesCircle","href","target","rel","faExternalLink","classNames","Button","variant","size","onClick","faChevronCircleRight","Game","realPlay","showResult","handleRealButton","handleFakeButton","Home_Result","dangerouslySetInnerHTML","__html","content","replace","defaultProps","undefined","feedMetadata","parser","Parser","randomElement","array","Math","floor","random","length","randomArticle","feeds","_randomElement","items","_randomElement2","_unused","Loading","faSpinnerThird","spin","Home","round","score","setScore","setRound","playHandler","newGameHandler","setHandlePlay","setHandleNewGame","_useState","useState","_useState2","Object","slicedToArray","setFeeds","_useState3","_useState4","setArticle","_useState5","_useState6","setRealPlay","_useState7","_useState8","setShowResult","fetchFeeds","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","t0","t1","t2","toConsumableArray","t3","Promise","all","map","_ref3","_callee","meta","feed","_context","parseURL","concat","sent","abrupt","objectSpread","console","error","stop","_x","apply","this","arguments","t4","t5","t6","call","handlePlay","isReal","max","handlePlayParent","advanceRound","handleNewGame","useEffect","Container","Helmet_default","Row","Col","sm","span","offset","md","Home_Game","Home_Loading"],"mappings":"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","file":"static/js/4.242cef5b.chunk.js","sourcesContent":["import React from 'react';\nimport { func, shape, bool } from 'prop-types';\nimport classNames from 'classnames';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faCheckCircle,\n    faTimesCircle,\n    faExternalLink,\n    faChevronCircleRight\n} from '@fortawesome/pro-solid-svg-icons';\n\nconst Result = ({\n    article: { source, real, title, link },\n    win,\n    handleNextArticle\n}) => {\n    const winVariant = win ? 'success' : 'danger';\n    return (\n        <>\n            <Card bg={winVariant} border={winVariant} className=\"text-center\">\n                <Card.Body>\n                    <Card.Title as=\"h4\">\n                        {win ? 'Correct!' : 'Incorrect'}\n                    </Card.Title>\n                    <h5>\n                        <FontAwesomeIcon\n                            icon={real ? faCheckCircle : faTimesCircle}\n                            className=\"mr-2\"\n                        />\n                        {real ? 'Real News' : 'Fake News'}\n                    </h5>\n                    <h6>{source}</h6>\n                    <a\n                        href={link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-white\"\n                    >\n                        {title}\n                        <FontAwesomeIcon\n                            icon={faExternalLink}\n                            className=\"ml-2\"\n                        />\n                    </a>\n                </Card.Body>\n            </Card>\n            <div\n                className={classNames(\n                    'd-flex',\n                    'justify-content-center',\n                    'mt-4'\n                )}\n            >\n                <Button variant=\"light\" size=\"lg\" onClick={handleNextArticle}>\n                    <FontAwesomeIcon\n                        icon={faChevronCircleRight}\n                        className=\"mr-2\"\n                    />\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n};\n\nResult.propTypes = {\n    article: shape({}).isRequired,\n    win: bool.isRequired,\n    handleNextArticle: func.isRequired\n};\n\nexport default Result;\n","import React from 'react';\nimport { func, shape, bool } from 'prop-types';\nimport classNames from 'classnames';\nimport { Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/pro-solid-svg-icons';\nimport Result from './Result';\n\nconst Game = ({\n    article,\n    realPlay,\n    showResult,\n    handleNextArticle,\n    handleRealButton,\n    handleFakeButton\n}) => {\n    const win = article && article.real === realPlay;\n    return showResult ? (\n        <Result\n            article={article}\n            win={win}\n            handleNextArticle={handleNextArticle}\n        />\n    ) : (\n        <>\n            <Card bg=\"dark\" border=\"dark\">\n                <Card.Body>\n                    <Card.Title>{article.title}</Card.Title>\n                    <article /* eslint-disable react/no-danger */\n                        dangerouslySetInnerHTML={{\n                            __html: article.content\n                                .replace(/<img[^>]*>/g, '')\n                                .replace(/<a[^>]*>.*<\\/a>/g, '')\n                        }}\n                    />\n                </Card.Body>\n            </Card>\n            <div\n                className={classNames(\n                    'd-flex',\n                    'align-items-center',\n                    'justify-content-center',\n                    'mt-4'\n                )}\n            >\n                <Button\n                    variant=\"success\"\n                    size=\"lg\"\n                    className=\"mr-3\"\n                    onClick={handleRealButton}\n                >\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"mr-2\" />\n                    Real\n                </Button>\n                <Button\n                    variant=\"danger\"\n                    size=\"lg\"\n                    className=\"ml-3\"\n                    onClick={handleFakeButton}\n                >\n                    <FontAwesomeIcon icon={faTimesCircle} className=\"mr-2\" />\n                    Fake\n                </Button>\n            </div>\n        </>\n    );\n};\n\nGame.propTypes = {\n    article: shape({}).isRequired,\n    realPlay: bool,\n    showResult: bool.isRequired,\n    handleNextArticle: func.isRequired,\n    handleRealButton: func.isRequired,\n    handleFakeButton: func.isRequired\n};\n\nGame.defaultProps = {\n    realPlay: undefined\n};\n\nexport default Game;\n","export default [\n    {\n        link: 'https://www.theonion.com/rss',\n        real: false\n    },\n    {\n        link: 'http://makeamericathebest.com/feed/',\n        real: false\n    },\n    {\n        link: 'https://babylonbee.com/feed',\n        real: false\n    },\n    {\n        link: 'https://www.wsj.com/xml/rss/3_7085.xml',\n        real: true\n    },\n    {\n        link: 'http://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml',\n        real: true\n    },\n    {\n        link: 'https://www.npr.org/rss/rss.php?id=1001',\n        real: true\n    }\n];\n","import React, { useState, useEffect } from 'react';\nimport { number, func } from 'prop-types';\nimport classNames from 'classnames';\nimport Helmet from 'react-helmet';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinnerThird } from '@fortawesome/pro-regular-svg-icons';\nimport Parser from 'rss-parser';\nimport Game from './Game';\nimport feedMetadata from './feedMetadata';\n\nconst parser = new Parser();\nconst CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\n\nconst randomElement = array =>\n    array ? array[Math.floor(Math.random() * array.length)] : null;\n\nconst randomArticle = feeds => {\n    try {\n        const { title: source, real, items } = randomElement(feeds);\n        const { title, content, link } = randomElement(items);\n        return {\n            source,\n            real,\n            title,\n            content,\n            link\n        };\n    } catch {\n        return randomArticle(feeds);\n    }\n};\n\nconst Loading = () => (\n    <p\n        className={classNames(\n            'd-flex',\n            'align-items-center',\n            'justify-content-center'\n        )}\n    >\n        <FontAwesomeIcon\n            icon={faSpinnerThird}\n            size=\"2x\"\n            spin\n            className={classNames('mr-3', 'text-primary')}\n        />\n        Loading news feeds...\n    </p>\n);\n\nconst Home = ({\n    round,\n    score,\n    setScore,\n    setRound,\n    playHandler,\n    newGameHandler,\n    setHandlePlay,\n    setHandleNewGame\n}) => {\n    const [feeds, setFeeds] = useState([]);\n    const [article, setArticle] = useState();\n    const [realPlay, setRealPlay] = useState();\n    const [showResult, setShowResult] = useState(false);\n\n    const fetchFeeds = async () => {\n        setFeeds([\n            ...feeds,\n            ...(await Promise.all(\n                feedMetadata.map(async meta => {\n                    try {\n                        const feed = await parser.parseURL(\n                            `${CORS_PROXY}${meta.link}`\n                        );\n                        return { ...feed, ...meta };\n                    } catch (error) {\n                        console.error(error);\n                        return [];\n                    }\n                })\n            ))\n        ]);\n    };\n\n    const handlePlay = isReal => {\n        setScore(article.real === isReal ? score + 1 : Math.max(score - 1, 0));\n        setRealPlay(isReal);\n        setShowResult(true);\n    };\n\n    const handlePlayParent = () => isReal => handlePlay(isReal);\n\n    const handleNextArticle = advanceRound => {\n        if (advanceRound) setRound(round + 1);\n        setArticle(randomArticle(feeds));\n        setShowResult(false);\n    };\n\n    const handleNewGame = () => () => {\n        setScore(0);\n        setRound(1);\n        handleNextArticle(false);\n    };\n\n    useEffect(() => {\n        if (!feeds.length) fetchFeeds();\n        else if (!article) setArticle(randomArticle(feeds));\n        if (!playHandler) setHandlePlay(handlePlayParent);\n        if (!newGameHandler) setHandleNewGame(handleNewGame);\n    }, [feeds, article, playHandler, newGameHandler]);\n\n    return (\n        <Container className=\"py-5\">\n            <Helmet title=\"FAKE NOOZ\" />\n            <h3 className=\"text-center mb-5\">Is it real or fake?</h3>\n            <Row>\n                <Col sm={{ span: 8, offset: 2 }} md={{ span: 6, offset: 3 }}>\n                    {article ? (\n                        <Game\n                            article={article}\n                            realPlay={realPlay}\n                            showResult={showResult}\n                            handleNextArticle={handleNextArticle}\n                            handleRealButton={() => handlePlay(true)}\n                            handleFakeButton={() => handlePlay(false)}\n                        />\n                    ) : (\n                        <Loading />\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nHome.propTypes = {\n    round: number.isRequired,\n    score: number.isRequired,\n    setScore: func.isRequired,\n    setRound: func.isRequired,\n    playHandler: func,\n    newGameHandler: func,\n    setHandlePlay: func.isRequired,\n    setHandleNewGame: func.isRequired\n};\n\nHome.defaultProps = {\n    playHandler: undefined,\n    newGameHandler: undefined\n};\n\nexport default Home;\n"],"sourceRoot":""}